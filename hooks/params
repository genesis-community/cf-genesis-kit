#!/bin/bash

source "$(dirname "$0")/params_helper"

# convert cf_public_ips into ASG rules objects
json=$(jq '. |= (.[] |= (.values[] |= (if .cf_public_ips == null then .  else . + { "cf_public_ips": [foreach .cf_public_ips[] as $ip (""; true; {"destination": $ip, "protocol": "all"})]} end) ))' <$infile)

# convert app_services_networks into ASG rules objects
json=$(echo $json | jq '. |= (.[] |= (.values[] |= (if .app_services_networks == null then .  else . + { "app_services_networks": [foreach .app_services_networks[] as $ip (""; true; {"destination": $ip, "protocol": "all"})]} end) ))')

if contains "haproxy-tls" ${subkits[*]}; then
  echo "$(color "Required parameter:" y) $(color "CF SSL certificate" W)"
  echo
  echo  With TLS enabled, HA Proxy requires at least one SSL cert/key pair to host your
  echo  "CF domains. Usually it will have a SAN for \`*.system.<base_domain>' and"
  echo "\`*.run.<base_domain>'. If you have any custom domains that apps will be bound"
  echo to, you will need them listed as wildcard-SANs or you will need to enter multiple
  echo certs. Each one should include both the RSA Private Key, and signed TLS/SSL
  echo certificate.
  echo

  domain=$(echo $json | jq -r '.[] | select(.values[].base_domain != null) | .values[0].base_domain')
  prompt_for gen_ssl "Do you need an auto-generated self-signed SSL certificate for Cloud Foundry?" default:N validate:boolean
  if [[ "${gen_ssl}" == "true" ]]; then
    safe --quiet x509 issue secret/$GENESIS_VAULT_PREFIX/haproxy/ssl --name *.system.$domain --name *.run.$domain
  else
    prompt_for ssl_pem "Please enter the SSL PEMs for your Cloud Foundry's public Domains." multiline
    tmpfile="$(dirname $infile)/ssl-pem"
    echo $ssl_pem > $tmpfile
    trap "rm -f $tmpfile" INT QUIT EXIT TERM
    safe --quiet paste secret/$GENESIS_VAULT_PREFIX/haproxy/ssl combined@$tmpfile
  fi
  json=$(echo $json | jq '. |= (.[] |= (.values[] |= (if .skip_ssl_validation == false then .skip_ssl_validation = true else . end )))')
fi

echo $json > $outfile
