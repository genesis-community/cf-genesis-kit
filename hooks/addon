#!/bin/bash
set -eu

# Automatically set to 'true' when called by blueprint which removes all echo
# messages and uses default values for the answers
: "${SILENT_MODE:=false}"

info()  { echo -e "\n\e[32m$*\e[0m"; }

header() {
  local token="="
  local line=$(printf "${token}%.0s" {1..80})
  info "\n${line}\n${token} $*\n${line}"
}

list() {
  echo "The following addons are defined:"
  echo
  echo "  login             Log into the Cloud Foundry instance as the"
  echo "                    admin user account.  This will overwrite local"
  echo "                    cf CLI configuration!"
  echo
  echo "  setup-cli         Installs cf CLI plugins like 'Targets', which"
  echo "                    helps to manage multiple Cloud Foundries from a"
  echo "                    single jumpbox."
  echo
  echo "  smoketest         Run the smoke tests errand on the first vm in the"
  echo "                    api instance group."
  echo
  echo "  stratos           Deploy Stratos, the Cloud Foundry web console."
  echo 
  echo "  acme-client       Install and configure the acme-client for stateless"
  echo "                    crtificate renewal - preequisite for enabling"
  echo "                    the '- haproxy-acme' feature"
  echo 
}

login() {
  local USE_CF_TARGETS=true
  if ! cf plugins | grep -q '^cf-targets'; then
    USE_CF_TARGETS=false
    describe "#Y{The cf-targets plugin does not seem to be installed}"
    echo "It is recommended you install it first, via 'genesis do $GENESIS_ENVIRONMENT -- setup-cli'"
    echo "NOTE:  It is not compatible with Apple M1 (arm) architecture"
    continue_without_cftargets=
    prompt_for continue_without_cftargets boolean -i --default n \
      "Continue anyways?"
    "$continue_without_cftargets" || exit 1
  fi

  api_domain="$(exodus api_domain)"
  api_url="https://${api_domain}"
  username="$(exodus admin_username)"
  password="$(exodus admin_password)"

  #TODO enfoce ssl validation
  cf api "$api_url" --skip-ssl-validation
  cf auth "$username" "$password"
  if "$USE_CF_TARGETS" ; then
    cf save-target -f "$GENESIS_ENVIRONMENT"
  fi
  echo -e "\n\n"
  cf target
}

installacme(){
  email="$(git config --global user.email)"
  if [[ $SILENT_MODE != true ]]; then
  header "Installing acme.sh shell script"

    prompt_for email line --default "$email"  \
    'Type your email address'
  fi
  curl -s https://get.acme.sh | sh -s email=$email > /dev/null 2>&1
}



registeracme(){
  if [[ $SILENT_MODE != true ]]; then  
    header "Registering acme client and setting vault credential"

    lab_targets=($(safe targets --json 2>/dev/null | jq -r '.[].name'))

    echo -e "Available targets: ${lab_targets[*]}"
    current_target=$(safe target --json 2>/dev/null | jq -r '.name')

    echo -e "You are currently targeting: '${current_target}'"
    prompt_for change_target boolean --default false \
    "Would you like to use another target?"

    if [[ $change_target == "true" ]]; then
      prompt_for new_target line 'Type your target'
      safe target "$new_target"
    fi
  fi
  current_thumbprint=$(safe get "$GENESIS_EXODUS_MOUNT$GENESIS_ENVIRONMENT/acme/acme:thumbprint" 2>/dev/null || true)
  
  if [[ -n $current_thumbprint ]]; then
    if [[ $SILENT_MODE != true ]]; then
      prompt_for update_thumbprint boolean --default false \
      "You have already set your thumbprint to '${current_thumbprint}'. Would you like to update it?"
      else
        update_thumbprint=false
    fi
    else
      update_thumbprint=true
  fi
  

  if [[ $update_thumbprint == true ]]; then
    thumbprint=$(~/.acme.sh/acme.sh --register-account | awk -F"'" '/ACCOUNT_THUMBPRINT=/{print $2}')
      if [[ $SILENT_MODE != true ]]; then
        echo -e "\n$GENESIS_EXODUS_MOUNT$GENESIS_ENVIRONMENT/acme/acme is being set with the following value:"
      fi
    safe set "$GENESIS_EXODUS_MOUNT$GENESIS_ENVIRONMENT/acme/acme" thumbprint="$thumbprint"
    else
    if [[ $SILENT_MODE != true ]]; then
      echo "Skipping thumbprint update."
    fi
  fi
}

setup_acme(){
  if [[ -x ~/.acme.sh/acme.sh ]]; then
    acme_version=$(~/.acme.sh/acme.sh -v 2>/dev/null || true)
    url=$(echo "$acme_version" | grep -Eo 'https?://[^ ]+' || true)
    version=$(echo "$acme_version" | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+' || true)
  fi
  if [[ -n $version ]]; then
    if [[ $SILENT_MODE != true ]]; then
      echo "You are currently using acme.sh '${version}' from '${url}'"
    fi
  else
    installacme
  fi
  registeracme

}


case $GENESIS_ADDON_SCRIPT in
  (list) list ;;
  
  (login) login ;;
  
  (remigrate)
    # Migrate the secrets
    set -e
    #shellcheck disable=SC1091
    source ./hooks/migrate-to-2.0
    validate_expected_vault_secrets
    correct_x509_certs
    migrate_credentials_to_credhub
    ;;
  
  (setup-cli)
    force=0
    while test $# -gt 0 ; do
      case "$1" in
        (-f) force=1;;
        (-*) describe "#R{[ERROR]} Bad option $1: expecting -f" && exit 1 ;;
        (*)  describe "#R{[ERROR]} setup-cli does not take any arguments" && exit 1;;
      esac
      shift
    done
    if ! cf list-plugin-repos | grep -q CF-Community; then
      describe 'Adding #G{Cloud Foundry Community} plugins repository...'
      cf add-plugin-repo CF-Community http://plugins.cloudfoundry.org
    fi
    if ! cf plugins | grep -q '^cf-targets'; then
      describe 'Installing the #C{cf-targets} plugin...'
      cmd=( cf install-plugin -r CF-Community Targets )
      if [[ "$force" == "1" ]] ; then
        cmd+=( -f )
      fi
      "${cmd[@]}"
    fi
    cf plugins
    ;;
  
  (smoketest)
    "$GENESIS_BOSH_COMMAND" -e "$BOSH_ENVIRONMENT" -d "$BOSH_DEPLOYMENT" run-errand smoke_tests
    ;;

  (acme-client)
    setup_acme
    ;;

  (*) run_extended_addon "$@" ;; # This will run the addon script in the
                            # $GENESIS_ADDON_SCRIPT file, if it exists.
                            # Ex: hooks/addon-stratos
esac
exit 0