#!/bin/bash
set -eu
vault="secret/$GENESIS_VAULT_PREFIX"
target=$GENESIS_ENVIRONMENT

list() {
  echo "The following addons are defined:"
  echo
  echo "  login       Log into the Cloud Foundry instance as the"
  echo "              admin user account.  This will overwrite local"
  echo "              cf CLI configuration!"
  echo
  echo "  setup-cli   Installs cf CLI plugins like 'Targets', which"
  echo "              helps to manage multiple Cloud Foundries from a"
  echo "              single jumpbox."
  echo
  echo "  asg         Generates application security group definitions,"
  echo "              in JSON, which can then be fed into Cloud Foundry."
  echo
}

case $GENESIS_ADDON_SCRIPT in
list)
  list
  exit 0
  ;;

login)
  if ! cf plugins | grep -q '^cf-targets'; then
    describe "#Y{The cf-targets plugin does not seem to be installed}"
        echo "Install it first, via 'genesis do $GENESIS_ENVIRONMENT -- setup-cli'"
    exit 1
  fi

  base=$(lookup params.base_domain)
  system_domain=$(lookup params.system_domain system.$base)
  api_url=https://api.$system_domain
  password=$(safe read $vault/admin_user:password)

  if want_feature self-signed; then
    cf api $api_url --skip-ssl-validation
  else
    cf api $api_url
  fi

  cf auth admin "$password"
  cf save-target -f $target
  echo ; echo
  cf target
  ;;

setup-cli)
  if ! cf list-plugin-repos | grep -q CF-Community; then
    describe "Adding #G{Cloud Foundry Community} plugins repository..."
    cf add-plugin-repo CF-Community http://plugins.cloudfoundry.org
  fi
  if ! cf plugins | grep -q '^cf-targets'; then
    describe "Installing the #C{cf-targets} plugin..."
    cf install-plugin -r CF-Community Targets
  fi
  cf plugins
  ;;

asg)
  echo "To allow Cloud Foundry application instances to contact"
  echo "other application instances via the CF gorouters:"
  echo
  lookup params.cf_public_ips '[]' | jq '.[] | { "destination": ., "protocol": "all" }' | jq -s
  echo
  echo "To allow Cloud Floundry application instances to contact"
  echo "the services networks (for consuming brokered services):"
  echo
  lookup params.app_services_networks '[]' | jq '.[] | { "destination": ., "protocol": "all" }' | jq -s
  echo
  ;;

*)
  echo "Unrecognized Cloud Foundry Genesis Kit addon."
  list
  exit 1
  ;;
esac
