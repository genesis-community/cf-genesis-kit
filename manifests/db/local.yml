---
params:
  uaadb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  uaadb_user:     uaaadmin
  uaadb_password: (( vault meta.vault "/uaadb:password" ))
  uaadb_scheme:   postgresql
  uaadb_port:     5432

  ccdb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  ccdb_user:     ccadmin
  ccdb_password: (( vault meta.vault "/ccdb:password" ))
  ccdb_scheme:   postgres
  ccdb_port:     5432

  diegodb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  diegodb_user:     diegoadmin
  diegodb_password: (( vault meta.vault "/diegodb:password" ))
  diegodb_scheme:   postgres
  diegodb_port:     5432
  diegodb_connection_string: (( concat params.diegodb_scheme "://" params.diegodb_user ":" params.diegodb_password "@" params.diegodb_host ":" params.diegodb_port "/" params.diegodb_name ))

  postgres_disk_pool: postgres
  postgres_vm_type:   postgres

  autoscalerdb_name:     autoscaler
  autoscalerdb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  autoscalerdb_user:     autoscaler
  autoscalerdb_password: (( vault meta.vault "/autoscalerdb:password" ))
  autoscalerdb_port:     5432

  policyserverdb_name:     policyserverdb
  policyserverdb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  policyserverdb_user:     policyserveradmin
  policyserverdb_scheme:   postgres
  policyserverdb_password: (( vault meta.vault "/autoscalerdb:password" ))
  policyserverdb_port:     5432

  silkdb_name:     silkdb
  silkdb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  silkdb_user:     silkadmin
  silkdb_scheme:   postgres
  silkdb_password: (( vault meta.vault "/autoscalerdb:password" ))
  silkdb_port:     5432

  locketdb_name:     locketdb
  locketdb_host:     (( grab instance_groups.postgres.networks[0].static_ips[0] ))
  locketdb_user:     locketadmin
  locketdb_scheme:   postgres
  locketdb_password: (( vault meta.vault "/autoscalerdb:password" ))
  locketdb_port:     5432

releases:
  - name:    postgres
    version: "3.2.0"
    url:     (( concat "https://github.com/cloudfoundry-community/postgres-boshrelease/releases/download/v" releases.postgres.version "/postgres-" releases.postgres.version ".tgz" ))
    sha1:    470c2b6d98d988ad9dc36dedcd8133e247de63f7

instance_groups:
  - (( insert after "nats" ))
  - name: postgres
    instances: 1
    persistent_disk_type: (( grab params.postgres_disk_pool ))
    vm_type: (( grab params.postgres_vm_type ))
    azs: (( grab params.availability_zones || meta.default.azs ))
    stemcell: default

    jobs:
      - name: postgres
        release: postgres
        properties:
          postgres:
            config:
              port: 5432
              listen_addresses: '*'
              max_connections: (( grab params.postgres_max_connections || 100 ))
            replication:
              enabled: false

            hba:
              - host all all 0.0.0.0/0 md5
              - host all all ::/0 md5

            users:
              - username: (( grab params.uaadb_user ))
                password: (( grab params.uaadb_password ))

              - username: (( grab params.ccdb_user ))
                password: (( grab params.ccdb_password ))

              - username: (( grab params.diegodb_user ))
                password: (( grab params.diegodb_password ))

              - username: (( grab params.autoscalerdb_user ))
                password: (( grab params.autoscalerdb_password ))

              - username: (( grab params.silkdb_user ))
                password: (( grab params.silkdb_password ))

              - username: (( grab params.policyserverdb_user ))
                password: (( grab params.policyserverdb_password ))

              - username: (( grab params.locketdb_user ))
                password: (( grab params.locketdb_password ))

              - username: shield
                password: (( vault meta.vault "/shield:password" ))
                admin: true

            databases:
              - name:        (( grab params.ccdb_name ))
                users:      [(( grab params.ccdb_user ))]
                extensions: [citext, pgcrypto]

              - name:        (( grab params.uaadb_name ))
                users:      [(( grab params.uaadb_user ))]
                extensions: [citext, pgcrypto]

              - name:        (( grab params.diegodb_name ))
                users:      [(( grab params.diegodb_user ))]
                extensions: [citext, pgcrypto]

              - name:       autoscaler #can't be changed, autoscaler release migrations have a hardcoded db name expectation
                users:      [(( grab params.autoscalerdb_user ))]
                extensions: [citext, pgcrypto]

              - name:        (( grab params.policyserverdb_name ))
                users:      [(( grab params.policyserverdb_user ))]
                extensions: [citext, pgcrypto]

              - name:        (( grab params.locketdb_name ))
                users:      [(( grab params.locketdb_user ))]
                extensions: [citext, pgcrypto]


              - name:        (( grab params.silkdb_name ))
                users:      [(( grab params.silkdb_user ))]
                extensions: [citext, pgcrypto]
