---
instance_groups:
  - name: router
    jobs:
      - name: gorouter
        release: routing
        provides:
          gorouter: { as: gorouter, shared: true }
        properties:
          uaa:
            ca_cert: (( grab meta.certs.uaa.ca ))
            ssl:
              port: (( grab meta.uaa.ssl_port ))
            clients:
              gorouter:
                secret: (( grab meta.uaa.gorouter_secret ))
          router:
            ca_certs: (( grab meta.certs.diego.ca ))
            enable_ssl: false
            logging_level: (( grab params.log_level ))
            tracing:
              enable_zipkin: true
            ssl_cert: ~
            ssl_key: ~
            ssl_skip_validation: (( grab params.skip_ssl_validation ))
            status:
              user: health
              password: (( vault meta.vault "/gorouter/status:password" ))

      - name: ssh_proxy
        release: diego
        provides:
          ssh_proxy: { as: ssh-proxy, shared: true }
        properties:
          enable_consul_service_registration: false
          loggregator:
            use_v2_api: true
            ca_cert: (( grab meta.certs.loggregator.ca ))
            cert:    (( grab meta.certs.loggregator.metron.server.cert ))
            key:     (( grab meta.certs.loggregator.metron.server.key ))
          diego:
            ssl:
              skip_cert_verify: (( grab params.skip_ssl_validation ))
            ssh_proxy:
              bbs:
                .: (( inject meta.certs.diego.bbs.client ))
                require_ssl: true
                ca_cert: (( grab meta.certs.diego.ca ))
              enable_cf_auth: true
              disable_healthcheck_server: true
              host_key: (( vault meta.vault "/ssh_proxy/host_key:private" ))
              uaa_secret: (( grab meta.uaa.ssh_proxy_secret ))
              uaa:
                port: (( grab meta.uaa.ssl_port ))
                ca_cert: (( grab meta.certs.uaa.ca ))
