addons:
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: loggregator_agent
    properties:
      disable_udp: true
      grpc_port: 3459
      loggregator:
        tls:
          agent:
            cert: <!{credhub}:loggregator_tls_agent.certificate!>
            key: <!{credhub}:loggregator_tls_agent.private_key!>
          ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
      metrics:
        ca_cert: <!{credhub}:loggregator_agent_metrics_tls.ca!>
        cert: <!{credhub}:loggregator_agent_metrics_tls.certificate!>
        key: <!{credhub}:loggregator_agent_metrics_tls.private_key!>
        server_name: loggregator_agent_metrics
    release: loggregator-agent
  name: loggregator_agent
- include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: loggr-forwarder-agent
    properties:
      metrics:
        ca_cert: <!{credhub}:forwarder_agent_metrics_tls.ca!>
        cert: <!{credhub}:forwarder_agent_metrics_tls.certificate!>
        key: <!{credhub}:forwarder_agent_metrics_tls.private_key!>
        server_name: forwarder_agent_metrics
      tls:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
    release: loggregator-agent
  name: forwarder_agent
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: loggr-syslog-agent
    properties:
      cache:
        tls:
          ca_cert: <!{credhub}:syslog_agent_api_tls.ca!>
          cert: <!{credhub}:syslog_agent_api_tls.certificate!>
          cn: binding-cache
          key: <!{credhub}:syslog_agent_api_tls.private_key!>
      metrics:
        ca_cert: <!{credhub}:syslog_agent_metrics_tls.ca!>
        cert: <!{credhub}:syslog_agent_metrics_tls.certificate!>
        key: <!{credhub}:syslog_agent_metrics_tls.private_key!>
        server_name: syslog_agent_metrics
      port: 3460
      tls:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
    release: loggregator-agent
  name: loggr-syslog-agent
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: prom_scraper
    properties:
      metrics:
        ca_cert: <!{credhub}:prom_scraper_metrics_tls.ca!>
        cert: <!{credhub}:prom_scraper_metrics_tls.certificate!>
        key: <!{credhub}:prom_scraper_metrics_tls.private_key!>
        server_name: prom_scraper_metrics
      scrape:
        tls:
          ca_cert: <!{credhub}:prom_scraper_scrape_tls.ca!>
          cert: <!{credhub}:prom_scraper_scrape_tls.certificate!>
          key: <!{credhub}:prom_scraper_scrape_tls.private_key!>
      scrape_interval: 60s
    release: loggregator-agent
  name: prom_scraper
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: metrics-discovery-registrar
    properties:
      metrics:
        ca_cert: <!{credhub}:metrics_discovery_metrics_tls.ca!>
        cert: <!{credhub}:metrics_discovery_metrics_tls.certificate!>
        key: <!{credhub}:metrics_discovery_metrics_tls.private_key!>
        server_name: metrics_discovery_metrics
      nats_client:
        cert: <!{credhub}:nats_client_cert.certificate!>
        key: <!{credhub}:nats_client_cert.private_key!>
    release: metrics-discovery
  name: metrics-discovery-registrar
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: metrics-agent
    properties:
      grpc:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:metrics_agent_tls.ca!>
        cert: <!{credhub}:metrics_agent_tls.certificate!>
        key: <!{credhub}:metrics_agent_tls.private_key!>
        server_name: metrics_agent
      scrape:
        tls:
          ca_cert: <!{credhub}:prom_scraper_scrape_tls.ca!>
          cert: <!{credhub}:prom_scraper_scrape_tls.certificate!>
          key: <!{credhub}:prom_scraper_scrape_tls.private_key!>
    release: metrics-discovery
  name: metrics-agent
- include:
    stemcell:
    - os: ubuntu-xenial
    - os: ubuntu-bionic
  jobs:
  - name: bpm
    release: bpm
  name: bpm
- jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - domain: _.cell.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: diego-cell
          network: cf-runtime
          query: _
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: windows2012R2-cell
          network: cf-runtime
          query: _
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: windows2016-cell
          network: cf-runtime
          query: _
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: isolated-diego-cell
          network: cf-runtime
          query: _
      - domain: auctioneer.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: scheduler
          network: cf-core
          query: q-s4
      - domain: bbs.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: diego-api
          network: cf-core
          query: q-s4
      - domain: blobstore.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: singleton-blobstore
          network: cf-core
          query: '*'
      - domain: cc-uploader.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: api
          network: cf-core
          query: '*'
      - domain: cloud-controller-ng.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: api
          network: cf-core
          query: '*'
      - domain: credhub.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: credhub
          network: cf-core
          query: '*'
      - domain: doppler.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: doppler
          network: cf-core
          query: '*'
      - domain: file-server.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: api
          network: cf-core
          query: '*'
      - domain: gorouter.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: router
          network: cf-edge
          query: '*'
      - domain: locket.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: diego-api
          network: cf-core
          query: '*'
      - domain: loggregator-trafficcontroller.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: log-api
          network: cf-core
          query: '*'
      - domain: policy-server.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: api
          network: cf-core
          query: '*'
      - domain: reverse-log-proxy.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: log-api
          network: cf-core
          query: '*'
      - domain: routing-api.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: api
          network: cf-core
          query: '*'
      - domain: silk-controller.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: diego-api
          network: cf-core
          query: '*'
      - domain: sql-db.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: database
          network: cf-core
          query: '*'
      - domain: ssh-proxy.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: scheduler
          network: cf-core
          query: '*'
      - domain: tps.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: scheduler
          network: cf-core
          query: '*'
      - domain: uaa.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: uaa
          network: cf-core
          query: '*'
      - domain: nats.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: nats
          network: cf-core
          query: '*'
      - domain: _.nats.service.cf.internal
        targets:
        - deployment: blobstore-azure-cf
          domain: bosh
          instance_group: nats
          network: cf-core
          query: _
    release: bosh-dns-aliases
  name: bosh-dns-aliases
exodus:
  admin_password: <!{credhub}:cf_admin_password!>
  admin_username: admin
  api_domain: api.system.cf.testing.examle
  app_domains:
  - run.cf.testing.examle
  apps_domain: run.cf.testing.examle
  base_domain: cf.testing.examle
  bosh: blobstore-azure
  cf-deployment-date: 2022-Feb-14 03:48:47 UTC
  cf-deployment-hotfixes: true
  cf-deployment-url: https://github.com/cloudfoundry/cf-deployment/releases/tag/v16.25.0
  cf-deployment-version: 16.25.0
  core_network: cf-core
  db_network: cf-core
  edge_network: cf-edge
  features: azure-blobstore
  is_director: false
  runtime_network: cf-runtime
  system_domain: system.cf.testing.examle
  system_org: system
  system_space: system
  use_create_env: false
  vaulted_uaa_clients: /secret/blobstore/azure/cf/uaa/client_secrets:firehose
features:
  randomize_az_placement: true
instance_groups:
- azs:
  - z1
  - z2
  instances: 1
  jobs:
  - name: smoke_tests
    properties:
      bpm:
        enabled: true
      smoke_tests:
        api: https://api.system.cf.testing.examle
        apps_domain: run.cf.testing.examle
        cf_dial_timeout_in_seconds: 300
        client: cf_smoke_tests
        client_secret: <!{credhub}:uaa_clients_cf_smoke_tests_secret!>
        org: cf_smoke_tests_org
        skip_ssl_validation: true
        space: cf_smoke_tests_space
    release: cf-smoke-tests
  - name: cf-cli-7-linux
    release: cf-cli
  lifecycle: errand
  name: smoke-tests
  networks:
  - name: cf-runtime
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: nats
    properties:
      nats:
        hostname: nats.service.cf.internal
        internal:
          tls:
            ca: <!{credhub}:nats_internal_cert.ca!>
            certificate: <!{credhub}:nats_internal_cert.certificate!>
            enabled: true
            private_key: <!{credhub}:nats_internal_cert.private_key!>
        password: <!{credhub}:nats_password!>
        user: nats
    provides:
      nats:
        as: nats
        shared: true
    release: nats
  - custom_provider_definitions:
    - name: nats-tls-address
      type: address
    name: nats-tls
    properties:
      nats:
        external:
          tls:
            ca: <!{credhub}:nats_client_cert.ca!>
            certificate: <!{credhub}:nats_server_cert.certificate!>
            private_key: <!{credhub}:nats_server_cert.private_key!>
        hostname: nats.service.cf.internal
        internal:
          tls:
            ca: <!{credhub}:nats_internal_cert.ca!>
            certificate: <!{credhub}:nats_internal_cert.certificate!>
            enabled: true
            private_key: <!{credhub}:nats_internal_cert.private_key!>
        password: <!{credhub}:nats_password!>
        user: nats
    provides:
      nats-tls:
        as: nats-tls
        shared: true
    release: nats
  name: nats
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: postgres
    properties:
      databases:
        databases:
        - citext: true
          name: cloud_controller
          tag: cc
        - citext: true
          name: uaa
          tag: uaa
        - citext: true
          name: diego
          tag: diego
        - citext: true
          name: routing-api
          tag: routing-api
        - citext: false
          name: network_policy
          tag: networkpolicy
        - citext: false
          name: network_connectivity
          tag: networkconnectivity
        - citext: true
          name: locket
          tag: locket
        - citext: true
          name: credhub
          tag: credhub
        db_scheme: postgres
        port: 5524
        roles:
        - name: cloud_controller
          password: <!{credhub}:cc_database_password!>
          tag: admin
        - name: uaa
          password: <!{credhub}:uaa_database_password!>
          tag: admin
        - name: diego
          password: <!{credhub}:diego_database_password!>
          tag: admin
        - name: routing-api
          password: <!{credhub}:routing_api_database_password!>
          tag: admin
        - name: network_policy
          password: <!{credhub}:network_policy_database_password!>
          tag: admin
        - name: network_connectivity
          password: <!{credhub}:network_connectivity_database_password!>
          tag: admin
        - name: locket
          password: <!{credhub}:locket_database_password!>
          tag: locket
        - name: credhub
          password: <!{credhub}:credhub_database_password!>
          tag: admin
    release: postgres
  migrated_from:
  - name: postgres
  - name: singleton-database
  name: database
  networks:
  - name: cf-core
  persistent_disk_type: 10GB
  stemcell: default
  update:
    serial: true
  vm_type: small
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: cfdot
    properties:
      tls:
        ca_certificate: <!{credhub}:diego_rep_client.ca!>
        certificate: <!{credhub}:diego_rep_client.certificate!>
        private_key: <!{credhub}:diego_rep_client.private_key!>
    release: diego
  - name: bbs
    properties:
      bpm:
        enabled: true
      diego:
        bbs:
          active_key_label: key-2016-06
          auctioneer:
            ca_cert: <!{credhub}:diego_auctioneer_client.ca!>
            client_cert: <!{credhub}:diego_auctioneer_client.certificate!>
            client_key: <!{credhub}:diego_auctioneer_client.private_key!>
          ca_cert: <!{credhub}:diego_bbs_server.ca!>
          detect_consul_cell_registrations: false
          encryption_keys:
          - label: key-2016-06
            passphrase: <!{credhub}:diego_bbs_encryption_keys_passphrase!>
          rep:
            ca_cert: <!{credhub}:diego_rep_client.ca!>
            client_cert: <!{credhub}:diego_rep_client.certificate!>
            client_key: <!{credhub}:diego_rep_client.private_key!>
            require_tls: true
          server_cert: <!{credhub}:diego_bbs_server.certificate!>
          server_key: <!{credhub}:diego_bbs_server.private_key!>
          skip_consul_lock: true
          sql:
            db_driver: postgres
            db_host: sql-db.service.cf.internal
            db_password: <!{credhub}:diego_database_password!>
            db_port: 5524
            db_schema: diego
            db_username: diego
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
    release: diego
  - name: silk-controller
    properties:
      ca_cert: <!{credhub}:silk_controller.ca!>
      database:
        host: sql-db.service.cf.internal
        name: network_connectivity
        password: <!{credhub}:network_connectivity_database_password!>
        port: 5524
        type: postgres
        username: network_connectivity
      server_cert: <!{credhub}:silk_controller.certificate!>
      server_key: <!{credhub}:silk_controller.private_key!>
      silk_daemon:
        ca_cert: <!{credhub}:silk_daemon.ca!>
        client_cert: <!{credhub}:silk_daemon.certificate!>
        client_key: <!{credhub}:silk_daemon.private_key!>
    release: silk
  - name: locket
    properties:
      bpm:
        enabled: true
      diego:
        locket:
          sql:
            db_driver: postgres
            db_host: sql-db.service.cf.internal
            db_password: <!{credhub}:locket_database_password!>
            db_port: 5524
            db_schema: locket
            db_username: locket
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
      tls:
        ca_cert: <!{credhub}:diego_locket_server.ca!>
        cert: <!{credhub}:diego_locket_server.certificate!>
        key: <!{credhub}:diego_locket_server.private_key!>
    release: diego
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  migrated_from:
  - name: diego-bbs
  name: diego-api
  networks:
  - name: cf-core
  stemcell: default
  vm_type: small
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: uaa
    properties:
      encryption:
        active_key_label: default_key
        encryption_keys:
        - label: default_key
          passphrase: <!{credhub}:uaa_default_encryption_passphrase!>
      login:
        branding:
          footer_legal_text: null
          footer_links: null
          product_logo: null
          square_logo: null
        links:
          passwd: https://login.system.cf.testing.examle/forgot_password
          signup: https://login.system.cf.testing.examle/create_account
        saml:
          activeKeyId: key-1
          keys:
            key-1:
              certificate: <!{credhub}:uaa_login_saml.certificate!>
              key: <!{credhub}:uaa_login_saml.private_key!>
              passphrase: ""
      uaa:
        admin:
          client_secret: <!{credhub}:uaa_admin_client_secret!>
        clients:
          cc-service-dashboards:
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scope: openid,cloud_controller_service_permissions.read
            secret: <!{credhub}:uaa_clients_cc-service-dashboards_secret!>
          cc_routing:
            authorities: routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_cc-routing_secret!>
          cc_service_key_client:
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_cc_service_key_client_secret!>
          cf:
            access-token-validity: 1200
            authorities: uaa.none
            authorized-grant-types: password,refresh_token
            override: true
            refresh-token-validity: 2592000
            scope: network.admin,network.write,cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read,routing.router_groups.write,cloud_controller.admin_read_only,cloud_controller.global_auditor,perm.admin,clients.read
            secret: ""
          cf_smoke_tests:
            authorities: cloud_controller.admin,clients.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_cf_smoke_tests_secret!>
          cloud_controller_username_lookup:
            authorities: scim.userids
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_cloud_controller_username_lookup_secret!>
          credhub_admin_client:
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            secret: <!{credhub}:credhub_admin_client_secret!>
          doppler:
            authorities: uaa.resource
            authorized-grant-types: client_credentials
            override: true
            secret: <!{credhub}:uaa_clients_doppler_secret!>
          gorouter:
            authorities: routing.routes.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_gorouter_secret!>
          network-policy:
            authorities: uaa.resource,cloud_controller.admin_read_only
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_network_policy_secret!>
          routing_api_client:
            authorities: routing.routes.write,routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_routing_api_client_secret!>
          ssh-proxy:
            authorized-grant-types: authorization_code
            autoapprove: true
            override: true
            redirect-uri: https://uaa.system.cf.testing.examle/login
            scope: openid,cloud_controller.read,cloud_controller.write,cloud_controller.admin
            secret: <!{credhub}:uaa_clients_ssh-proxy_secret!>
          tcp_emitter:
            authorities: routing.routes.write,routing.routes.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_tcp_emitter_secret!>
          tcp_router:
            authorities: routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: <!{credhub}:uaa_clients_tcp_router_secret!>
        jwt:
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: <!{credhub}:uaa_jwt_signing_key.private_key!>
        logging_level: INFO
        scim:
          users:
          - groups:
            - clients.read
            - cloud_controller.admin
            - doppler.firehose
            - network.admin
            - openid
            - routing.router_groups.read
            - routing.router_groups.write
            - scim.read
            - scim.write
            name: admin
            password: <!{credhub}:cf_admin_password!>
        sslCertificate: <!{credhub}:uaa_ssl.certificate!>
        sslPrivateKey: <!{credhub}:uaa_ssl.private_key!>
        url: https://uaa.system.cf.testing.examle
        zones:
          internal:
            hostnames:
            - uaa.service.cf.internal
      uaadb:
        databases:
        - name: uaa
          tag: uaa
        db_scheme: postgresql
        port: 5524
        roles:
        - name: uaa
          password: <!{credhub}:uaa_database_password!>
          tag: admin
        tls: disabled
    release: uaa
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - health_check:
            name: uaa-healthcheck
            script_path: /var/vcap/jobs/uaa/bin/dns/healthy
          name: uaa
          registration_interval: 10s
          server_cert_domain_san: uaa.service.cf.internal
          tags:
            component: uaa
          tls_port: 8443
          uris:
          - uaa.system.cf.testing.examle
          - '*.uaa.system.cf.testing.examle'
          - login.system.cf.testing.examle
          - '*.login.system.cf.testing.examle'
    release: routing
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: <!{credhub}:loggregator_tls_statsdinjector.ca!>
          statsd_injector:
            cert: <!{credhub}:loggregator_tls_statsdinjector.certificate!>
            key: <!{credhub}:loggregator_tls_statsdinjector.private_key!>
    release: statsd-injector
  name: uaa
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: cloud_controller_ng
    properties:
      app_domains:
      - run.cf.testing.examle
      app_ssh:
        host_key_fingerprint: <!{credhub}:diego_ssh_proxy_host_key.public_key_fingerprint!>
      build: cf-genesis-kit v2.0.0
      cc:
        buildpacks:
          buildpack_directory_key: blobstore-azure-cf-buildpacks-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        bulk_api_password: <!{credhub}:cc_bulk_api_password!>
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: <!{credhub}:cc_db_encryption_key!>
        db_encryption_key: <!{credhub}:cc_db_encryption_key!>
        default_running_security_groups:
        - public_networks
        - dns
        default_staging_security_groups:
        - public_networks
        - dns
        diego:
          docker_staging_stack: cflinuxfs3
        droplets:
          droplet_directory_key: blobstore-azure-cf-droplets-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        install_buildpacks:
        - name: staticfile_buildpack
          package: staticfile-buildpack-cflinuxfs3
        - name: java_buildpack
          package: java-buildpack-cflinuxfs3
        - name: ruby_buildpack
          package: ruby-buildpack-cflinuxfs3
        - name: dotnet_core_buildpack
          package: dotnet-core-buildpack-cflinuxfs3
        - name: nodejs_buildpack
          package: nodejs-buildpack-cflinuxfs3
        - name: go_buildpack
          package: go-buildpack-cflinuxfs3
        - name: python_buildpack
          package: python-buildpack-cflinuxfs3
        - name: php_buildpack
          package: php-buildpack-cflinuxfs3
        - name: nginx_buildpack
          package: nginx-buildpack-cflinuxfs3
        - name: r_buildpack
          package: r-buildpack-cflinuxfs3
        - name: binary_buildpack
          package: binary-buildpack-cflinuxfs3
        internal_api_password: <!{credhub}:cc_internal_api_password!>
        logcache_tls:
          certificate: <!{credhub}:cc_logcache_tls.certificate!>
          private_key: <!{credhub}:cc_logcache_tls.private_key!>
        min_cli_version: 6.23.0
        min_recommended_cli_version: 6.23.0
        mutual_tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
          private_key: <!{credhub}:cc_tls.private_key!>
          public_cert: <!{credhub}:cc_tls.certificate!>
        packages:
          app_package_directory_key: blobstore-azure-cf-app-packages-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        public_tls:
          ca_cert: <!{credhub}:cc_public_tls.ca!>
          certificate: <!{credhub}:cc_public_tls.certificate!>
          private_key: <!{credhub}:cc_public_tls.private_key!>
        resource_pool:
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
          resource_directory_key: blobstore-azure-cf-resources-((cc_directory_key))
        security_group_definitions:
        - name: public_networks
          rules:
          - destination: 0.0.0.0-9.255.255.255
            protocol: all
          - destination: 11.0.0.0-169.253.255.255
            protocol: all
          - destination: 169.255.0.0-172.15.255.255
            protocol: all
          - destination: 172.32.0.0-192.167.255.255
            protocol: all
          - destination: 192.169.0.0-255.255.255.255
            protocol: all
        - name: dns
          rules:
          - destination: 0.0.0.0/0
            ports: "53"
            protocol: tcp
          - destination: 0.0.0.0/0
            ports: "53"
            protocol: udp
        stacks:
        - description: Cloud Foundry Linux-based filesystem (Ubuntu 18.04)
          name: cflinuxfs3
        staging_upload_password: <!{credhub}:cc_staging_upload_password!>
        staging_upload_user: staging_user
        temporary_use_logcache: true
      ccdb:
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: postgres
        port: 5524
        roles:
        - name: cloud_controller
          password: <!{credhub}:cc_database_password!>
          tag: admin
      credhub_api:
        ca_cert: <!{credhub}:credhub_tls.ca!>
      description: Use `genesis info` on environment file for more details
      name: Cloud Foundry (blobstore-azure)
      router:
        route_services_secret: <!{credhub}:router_route_services_secret!>
      routing_api:
        enabled: true
      ssl:
        skip_cert_verify: true
      support_address: https://github.com/genesis-community/cf-genesis-kit
      system_domain: system.cf.testing.examle
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        clients:
          cc-service-dashboards:
            secret: <!{credhub}:uaa_clients_cc-service-dashboards_secret!>
          cc_routing:
            secret: <!{credhub}:uaa_clients_cc-routing_secret!>
          cc_service_key_client:
            secret: <!{credhub}:uaa_clients_cc_service_key_client_secret!>
          cloud_controller_username_lookup:
            secret: <!{credhub}:uaa_clients_cloud_controller_username_lookup_secret!>
        url: https://uaa.system.cf.testing.examle
    provides:
      cloud_controller:
        as: cloud_controller
        shared: true
    release: capi
  - name: binary-buildpack
    release: binary-buildpack
  - name: dotnet-core-buildpack
    release: dotnet-core-buildpack
  - name: go-buildpack
    release: go-buildpack
  - name: java-buildpack
    release: java-buildpack
  - name: nodejs-buildpack
    release: nodejs-buildpack
  - name: nginx-buildpack
    release: nginx-buildpack
  - name: r-buildpack
    release: r-buildpack
  - name: php-buildpack
    release: php-buildpack
  - name: python-buildpack
    release: python-buildpack
  - name: ruby-buildpack
    release: ruby-buildpack
  - name: staticfile-buildpack
    release: staticfile-buildpack
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - health_check:
            name: api-health-check
            script_path: /var/vcap/jobs/cloud_controller_ng/bin/cloud_controller_ng_health_check
            timeout: 6s
          name: api
          port: 9022
          registration_interval: 10s
          server_cert_domain_san: api.system.cf.testing.examle
          tags:
            component: CloudController
          tls_port: 9024
          uris:
          - api.system.cf.testing.examle
        - name: policy-server
          registration_interval: 20s
          server_cert_domain_san: api.system.cf.testing.examle
          tls_port: 4002
          uris:
          - api.system.cf.testing.examle/networking
    release: routing
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: <!{credhub}:loggregator_tls_statsdinjector.ca!>
          statsd_injector:
            cert: <!{credhub}:loggregator_tls_statsdinjector.certificate!>
            key: <!{credhub}:loggregator_tls_statsdinjector.private_key!>
    release: statsd-injector
  - name: file_server
    properties:
      bpm:
        enabled: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
    release: diego
  - name: routing-api
    properties:
      routing_api:
        enabled_api_endpoints: both
        locket:
          api_location: locket.service.cf.internal:8891
          ca_cert: <!{credhub}:diego_locket_client.ca!>
          client_cert: <!{credhub}:diego_locket_client.certificate!>
          client_key: <!{credhub}:diego_locket_client.private_key!>
        mtls_ca: <!{credhub}:routing_api_tls_client.ca!>
        mtls_client_cert: <!{credhub}:routing_api_tls_client.certificate!>
        mtls_client_key: <!{credhub}:routing_api_tls_client.private_key!>
        mtls_server_cert: <!{credhub}:routing_api_tls.certificate!>
        mtls_server_key: <!{credhub}:routing_api_tls.private_key!>
        router_groups:
        - name: default-tcp
          reservable_ports: 1024-1033
          type: tcp
        skip_consul_lock: true
        sqldb:
          host: sql-db.service.cf.internal
          password: <!{credhub}:routing_api_database_password!>
          port: 5524
          schema: routing-api
          type: postgres
          username: routing-api
        system_domain: system.cf.testing.examle
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        tls_port: 8443
    release: routing
  - name: policy-server
    properties:
      database:
        host: sql-db.service.cf.internal
        name: network_policy
        password: <!{credhub}:network_policy_database_password!>
        port: 5524
        type: postgres
        username: network_policy
      enable_space_developer_self_service: true
      enable_tls: true
      server_cert: <!{credhub}:network_policy_server_external.certificate!>
      server_key: <!{credhub}:network_policy_server_external.private_key!>
      uaa_ca: <!{credhub}:uaa_ssl.ca!>
      uaa_client_secret: <!{credhub}:uaa_clients_network_policy_secret!>
    release: cf-networking
  - name: policy-server-internal
    properties:
      ca_cert: <!{credhub}:network_policy_server.ca!>
      server_cert: <!{credhub}:network_policy_server.certificate!>
      server_key: <!{credhub}:network_policy_server.private_key!>
    release: cf-networking
  - name: cc_uploader
    properties:
      capi:
        cc_uploader:
          cc:
            ca_cert: <!{credhub}:cc_bridge_cc_uploader.ca!>
            client_cert: <!{credhub}:cc_bridge_cc_uploader.certificate!>
            client_key: <!{credhub}:cc_bridge_cc_uploader.private_key!>
          mutual_tls:
            ca_cert: <!{credhub}:cc_bridge_cc_uploader_server.ca!>
            server_cert: <!{credhub}:cc_bridge_cc_uploader_server.certificate!>
            server_key: <!{credhub}:cc_bridge_cc_uploader_server.private_key!>
    release: capi
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: api
  networks:
  - name: cf-core
  stemcell: default
  vm_extensions:
  - 50GB_ephemeral_disk
  vm_type: small
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: cloud_controller_worker
    properties:
      cc:
        buildpacks:
          buildpack_directory_key: blobstore-azure-cf-buildpacks-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: <!{credhub}:cc_db_encryption_key!>
        db_encryption_key: <!{credhub}:cc_db_encryption_key!>
        droplets:
          droplet_directory_key: blobstore-azure-cf-droplets-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        internal_api_password: <!{credhub}:cc_internal_api_password!>
        mutual_tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
          private_key: <!{credhub}:cc_tls.private_key!>
          public_cert: <!{credhub}:cc_tls.certificate!>
        packages:
          app_package_directory_key: blobstore-azure-cf-app-packages-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        resource_pool:
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
          resource_directory_key: blobstore-azure-cf-resources-((cc_directory_key))
        staging_upload_password: <!{credhub}:cc_staging_upload_password!>
        staging_upload_user: staging_user
      ccdb:
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: postgres
        port: 5524
        roles:
        - name: cloud_controller
          password: <!{credhub}:cc_database_password!>
          tag: admin
      routing_api:
        enabled: true
      ssl:
        skip_cert_verify: true
      system_domain: system.cf.testing.examle
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        clients:
          cc-service-dashboards:
            secret: <!{credhub}:uaa_clients_cc-service-dashboards_secret!>
          cc_routing:
            secret: <!{credhub}:uaa_clients_cc-routing_secret!>
    release: capi
  name: cc-worker
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: cfdot
    properties:
      tls:
        ca_certificate: <!{credhub}:diego_rep_client.ca!>
        certificate: <!{credhub}:diego_rep_client.certificate!>
        private_key: <!{credhub}:diego_rep_client.private_key!>
    release: diego
  - name: auctioneer
    properties:
      bpm:
        enabled: true
      diego:
        auctioneer:
          bbs:
            ca_cert: <!{credhub}:diego_bbs_client.ca!>
            client_cert: <!{credhub}:diego_bbs_client.certificate!>
            client_key: <!{credhub}:diego_bbs_client.private_key!>
          ca_cert: <!{credhub}:diego_auctioneer_server.ca!>
          rep:
            ca_cert: <!{credhub}:diego_rep_client.ca!>
            client_cert: <!{credhub}:diego_rep_client.certificate!>
            client_key: <!{credhub}:diego_rep_client.private_key!>
            require_tls: true
          server_cert: <!{credhub}:diego_auctioneer_server.certificate!>
          server_key: <!{credhub}:diego_auctioneer_server.private_key!>
          skip_consul_lock: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
    release: diego
  - name: cloud_controller_clock
    properties:
      cc:
        buildpacks:
          buildpack_directory_key: blobstore-azure-cf-buildpacks-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: <!{credhub}:cc_db_encryption_key!>
        db_encryption_key: <!{credhub}:cc_db_encryption_key!>
        droplets:
          droplet_directory_key: blobstore-azure-cf-droplets-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        internal_api_password: <!{credhub}:cc_internal_api_password!>
        mutual_tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
          private_key: <!{credhub}:cc_tls.private_key!>
          public_cert: <!{credhub}:cc_tls.certificate!>
        packages:
          app_package_directory_key: blobstore-azure-cf-app-packages-((cc_directory_key))
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
        resource_pool:
          fog_connection:
            azure_storage_access_key: test-access-key
            azure_storage_account_name: test-secret-access-key
            environment: AzureCloud
            provider: AzureRM
          resource_directory_key: blobstore-azure-cf-resources-((cc_directory_key))
        staging_upload_password: <!{credhub}:cc_staging_upload_password!>
        staging_upload_user: staging_user
      ccdb:
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: postgres
        port: 5524
        roles:
        - name: cloud_controller
          password: <!{credhub}:cc_database_password!>
          tag: admin
      routing_api:
        enabled: true
      ssl:
        skip_cert_verify: true
      system_domain: system.cf.testing.examle
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        clients:
          cc-service-dashboards:
            secret: <!{credhub}:uaa_clients_cc-service-dashboards_secret!>
          cc_routing:
            secret: <!{credhub}:uaa_clients_cc-routing_secret!>
        ssl:
          port: 8443
    release: capi
  - name: cc_deployment_updater
    properties:
      cc:
        db_encryption_key: <!{credhub}:cc_db_encryption_key!>
        mutual_tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
          private_key: <!{credhub}:cc_tls.private_key!>
          public_cert: <!{credhub}:cc_tls.certificate!>
      ccdb:
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: postgres
        port: 5524
        roles:
        - name: cloud_controller
          password: <!{credhub}:cc_database_password!>
          tag: admin
    release: capi
  - name: service-discovery-controller
    properties:
      dnshttps:
        client:
          ca: <!{credhub}:cf_app_sd_server_tls.ca!>
        server:
          tls:
            ca: <!{credhub}:cf_app_sd_server_tls.ca!>
            certificate: <!{credhub}:cf_app_sd_server_tls.certificate!>
            private_key: <!{credhub}:cf_app_sd_server_tls.private_key!>
      nats:
        cert_chain: <!{credhub}:nats_client_cert.certificate!>
        private_key: <!{credhub}:nats_client_cert.private_key!>
        tls_enabled: true
    release: cf-networking
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: <!{credhub}:loggregator_tls_statsdinjector.ca!>
          statsd_injector:
            cert: <!{credhub}:loggregator_tls_statsdinjector.certificate!>
            key: <!{credhub}:loggregator_tls_statsdinjector.private_key!>
    release: statsd-injector
  - name: tps
    properties:
      capi:
        tps:
          bbs:
            ca_cert: <!{credhub}:diego_bbs_client.ca!>
            client_cert: <!{credhub}:diego_bbs_client.certificate!>
            client_key: <!{credhub}:diego_bbs_client.private_key!>
          cc:
            ca_cert: <!{credhub}:cc_bridge_tps.ca!>
            client_cert: <!{credhub}:cc_bridge_tps.certificate!>
            client_key: <!{credhub}:cc_bridge_tps.private_key!>
          watcher:
            locket:
              api_location: locket.service.cf.internal:8891
            skip_consul_lock: true
    release: capi
  - name: ssh_proxy
    properties:
      backends:
        tls:
          ca_certificates:
          - <!{credhub}:diego_instance_identity_ca.ca!>
          client_certificate: <!{credhub}:ssh_proxy_backends_tls.certificate!>
          client_private_key: <!{credhub}:ssh_proxy_backends_tls.private_key!>
          enabled: true
      bpm:
        enabled: true
      diego:
        ssh_proxy:
          bbs:
            ca_cert: <!{credhub}:diego_bbs_client.ca!>
            client_cert: <!{credhub}:diego_bbs_client.certificate!>
            client_key: <!{credhub}:diego_bbs_client.private_key!>
          disable_healthcheck_server: true
          enable_cf_auth: true
          host_key: <!{credhub}:diego_ssh_proxy_host_key.private_key!>
          uaa:
            ca_cert: <!{credhub}:uaa_ssl.ca!>
          uaa_secret: <!{credhub}:uaa_clients_ssh-proxy_secret!>
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
    release: diego
  - name: loggr-syslog-binding-cache
    properties:
      api:
        tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
          cert: <!{credhub}:binding_cache_api_tls.certificate!>
          cn: cloud-controller-ng.service.cf.internal
          key: <!{credhub}:binding_cache_api_tls.private_key!>
      external_port: 9000
      metrics:
        ca_cert: <!{credhub}:loggr_syslog_binding_cache_metrics_tls.ca!>
        cert: <!{credhub}:loggr_syslog_binding_cache_metrics_tls.certificate!>
        key: <!{credhub}:loggr_syslog_binding_cache_metrics_tls.private_key!>
        server_name: loggr_syslog_binding_cache_metrics
      tls:
        ca_cert: <!{credhub}:binding_cache_tls.ca!>
        cert: <!{credhub}:binding_cache_tls.certificate!>
        cn: binding-cache
        key: <!{credhub}:binding_cache_tls.private_key!>
    release: loggregator-agent
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  migrated_from:
  - name: cc-bridge
  - name: cc-clock
  - name: diego-brain
  name: scheduler
  networks:
  - name: cf-core
  stemcell: default
  vm_extensions:
  - diego-ssh-proxy-network-properties
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: gorouter
    properties:
      nats:
        cert_chain: <!{credhub}:nats_client_cert.certificate!>
        private_key: <!{credhub}:nats_client_cert.private_key!>
        tls_enabled: true
      router:
        backends:
          cert_chain: <!{credhub}:gorouter_backend_tls.certificate!>
          private_key: <!{credhub}:gorouter_backend_tls.private_key!>
        ca_certs: |
          <!{credhub}:diego_instance_identity_ca.ca!>
          <!{credhub}:cc_tls.ca!>
          <!{credhub}:uaa_ssl.ca!>
          <!{credhub}:network_policy_server_external.ca!>
        enable_ssl: true
        route_services_secret: <!{credhub}:router_route_services_secret!>
        status:
          password: <!{credhub}:router_status_password!>
          user: router-status
        tls_pem:
        - cert_chain: <!{credhub}:router_ssl.certificate!>
          private_key: <!{credhub}:router_ssl.private_key!>
        tracing:
          enable_zipkin: true
      routing_api:
        enabled: true
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        clients:
          gorouter:
            secret: <!{credhub}:uaa_clients_gorouter_secret!>
        ssl:
          port: 8443
    release: routing
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: router
  networks:
  - name: cf-edge
  stemcell: default
  update:
    serial: true
  vm_extensions:
  - cf-router-network-properties
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: tcp_router
    properties:
      tcp_router:
        oauth_secret: <!{credhub}:uaa_clients_tcp_router_secret!>
        router_group: default-tcp
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        tls_port: 8443
    release: routing
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: tcp-router
  networks:
  - name: cf-edge
  stemcell: default
  vm_extensions:
  - cf-tcp-router-network-properties
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 4
  jobs:
  - name: doppler
    properties:
      loggregator:
        tls:
          ca_cert: <!{credhub}:loggregator_tls_doppler.ca!>
          doppler:
            cert: <!{credhub}:loggregator_tls_doppler.certificate!>
            key: <!{credhub}:loggregator_tls_doppler.private_key!>
    provides:
      doppler:
        as: doppler
        shared: true
    release: loggregator
  - name: log-cache
    properties:
      health_addr: localhost:6060
      metrics:
        ca_cert: <!{credhub}:log_cache_metrics_tls.ca!>
        cert: <!{credhub}:log_cache_metrics_tls.certificate!>
        key: <!{credhub}:log_cache_metrics_tls.private_key!>
        server_name: log_cache_metrics
      tls:
        ca_cert: <!{credhub}:log_cache.ca!>
        cert: <!{credhub}:log_cache.certificate!>
        key: <!{credhub}:log_cache.private_key!>
    provides:
      log-cache:
        shared: true
    release: log-cache
  - name: log-cache-gateway
    properties:
      gateway_addr: localhost:8081
      metrics:
        ca_cert: <!{credhub}:log_cache_gateway_metrics_tls.ca!>
        cert: <!{credhub}:log_cache_gateway_metrics_tls.certificate!>
        key: <!{credhub}:log_cache_gateway_metrics_tls.private_key!>
        server_name: log_cache_gateway_metrics
      proxy_cert: <!{credhub}:log_cache_proxy_tls.certificate!>
      proxy_key: <!{credhub}:log_cache_proxy_tls.private_key!>
    release: log-cache
  - consumes:
      reverse_log_proxy:
        from: reverse_log_proxy
    name: log-cache-nozzle
    properties:
      logs_provider:
        tls:
          ca_cert: <!{credhub}:logs_provider.ca!>
          cert: <!{credhub}:logs_provider.certificate!>
          key: <!{credhub}:logs_provider.private_key!>
      metrics:
        ca_cert: <!{credhub}:log_cache_nozzle_metrics_tls.ca!>
        cert: <!{credhub}:log_cache_nozzle_metrics_tls.certificate!>
        key: <!{credhub}:log_cache_nozzle_metrics_tls.private_key!>
        server_name: log_cache_nozzle_metrics
    release: log-cache
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: log-cache-reverse-proxy
          port: 8083
          registration_interval: 20s
          server_cert_domain_san: log-cache.system.cf.testing.examle
          tls_port: 8083
          uris:
          - log-cache.system.cf.testing.examle
          - '*.log-cache.system.cf.testing.examle'
    release: routing
  - name: log-cache-cf-auth-proxy
    properties:
      cc:
        ca_cert: <!{credhub}:cc_tls.ca!>
        common_name: cloud-controller-ng.service.cf.internal
      external_cert: <!{credhub}:logcache_ssl.certificate!>
      external_key: <!{credhub}:logcache_ssl.private_key!>
      metrics:
        ca_cert: <!{credhub}:log_cache_cf_auth_proxy_metrics_tls.ca!>
        cert: <!{credhub}:log_cache_cf_auth_proxy_metrics_tls.certificate!>
        key: <!{credhub}:log_cache_cf_auth_proxy_metrics_tls.private_key!>
        server_name: log_cache_cf_auth_proxy_metrics
      proxy_ca_cert: <!{credhub}:log_cache.ca!>
      proxy_port: 8083
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        client_id: doppler
        client_secret: <!{credhub}:uaa_clients_doppler_secret!>
        internal_addr: https://uaa.service.cf.internal:8443
    release: log-cache
  name: doppler
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 3
  jobs:
  - name: bosh-dns-adapter
    properties:
      dnshttps:
        client:
          tls:
            ca: <!{credhub}:cf_app_sd_client_tls.ca!>
            certificate: <!{credhub}:cf_app_sd_client_tls.certificate!>
            private_key: <!{credhub}:cf_app_sd_client_tls.private_key!>
        server:
          ca: <!{credhub}:cf_app_sd_client_tls.ca!>
      internal_domains:
      - apps.internal.
    release: cf-networking
  - name: cflinuxfs3-rootfs-setup
    properties:
      cflinuxfs3-rootfs:
        trusted_certs:
        - <!{credhub}:diego_instance_identity_ca.ca!>
        - <!{credhub}:credhub_tls.ca!>
        - <!{credhub}:uaa_ssl.ca!>
    release: cflinuxfs3
  - name: garden
    properties:
      garden:
        cleanup_process_dirs_on_wait: true
        containerd_mode: true
        debug_listen_address: 127.0.0.1:17019
        default_container_grace_time: 0
        deny_networks:
        - 0.0.0.0/0
        destroy_containers_on_start: true
        network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
        network_plugin_extra_args:
        - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
      logging:
        format:
          timestamp: rfc3339
    release: garden-runc
  - name: rep
    properties:
      bpm:
        enabled: true
      containers:
        proxy:
          enabled: true
          require_and_verify_client_certificates: true
          trusted_ca_certificates:
          - <!{credhub}:gorouter_backend_tls.ca!>
          - <!{credhub}:ssh_proxy_backends_tls.ca!>
          verify_subject_alt_name:
          - gorouter.service.cf.internal
          - ssh-proxy.service.cf.internal
        trusted_ca_certificates:
        - <!{credhub}:diego_instance_identity_ca.ca!>
        - <!{credhub}:credhub_tls.ca!>
        - <!{credhub}:uaa_ssl.ca!>
      diego:
        executor:
          instance_identity_ca_cert: <!{credhub}:diego_instance_identity_ca.certificate!>
          instance_identity_key: <!{credhub}:diego_instance_identity_ca.private_key!>
        rep:
          preloaded_rootfses:
          - cflinuxfs3:/var/vcap/packages/cflinuxfs3/rootfs.tar
      enable_consul_service_registration: false
      enable_declarative_healthcheck: true
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
      tls:
        ca_cert: <!{credhub}:diego_rep_agent_v2.ca!>
        cert: <!{credhub}:diego_rep_agent_v2.certificate!>
        key: <!{credhub}:diego_rep_agent_v2.private_key!>
    release: diego
  - name: cfdot
    properties:
      tls:
        ca_certificate: <!{credhub}:diego_rep_client.ca!>
        certificate: <!{credhub}:diego_rep_client.certificate!>
        private_key: <!{credhub}:diego_rep_client.private_key!>
    release: diego
  - consumes:
      nats:
        ip_addresses: false
      nats-tls:
        ip_addresses: false
    name: route_emitter
    properties:
      bpm:
        enabled: true
      diego:
        route_emitter:
          bbs:
            ca_cert: <!{credhub}:diego_bbs_client.ca!>
            client_cert: <!{credhub}:diego_bbs_client.certificate!>
            client_key: <!{credhub}:diego_bbs_client.private_key!>
          local_mode: true
          nats:
            tls:
              client_cert: <!{credhub}:nats_client_cert.certificate!>
              client_key: <!{credhub}:nats_client_cert.private_key!>
              enabled: true
      internal_routes:
        enabled: true
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: <!{credhub}:loggregator_tls_agent.ca!>
        cert: <!{credhub}:loggregator_tls_agent.certificate!>
        key: <!{credhub}:loggregator_tls_agent.private_key!>
        use_v2_api: true
      tcp:
        enabled: true
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        client_secret: <!{credhub}:uaa_clients_tcp_emitter_secret!>
    release: diego
  - name: garden-cni
    properties:
      cni_config_dir: /var/vcap/jobs/silk-cni/config/cni
      cni_plugin_dir: /var/vcap/packages/silk-cni/bin
    release: cf-networking
  - name: netmon
    release: silk
  - name: vxlan-policy-agent
    properties:
      ca_cert: <!{credhub}:network_policy_client.ca!>
      client_cert: <!{credhub}:network_policy_client.certificate!>
      client_key: <!{credhub}:network_policy_client.private_key!>
    release: silk
  - name: silk-daemon
    properties:
      ca_cert: <!{credhub}:silk_daemon.ca!>
      client_cert: <!{credhub}:silk_daemon.certificate!>
      client_key: <!{credhub}:silk_daemon.private_key!>
    release: silk
  - name: silk-cni
    properties:
      dns_servers:
      - 169.254.0.2
    release: silk
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: <!{credhub}:loggregator_tls_agent.ca!>
          cert: <!{credhub}:loggregator_tls_agent.certificate!>
          key: <!{credhub}:loggregator_tls_agent.private_key!>
      metrics:
        ca_cert: <!{credhub}:loggr_udp_forwarder_tls.ca!>
        cert: <!{credhub}:loggr_udp_forwarder_tls.certificate!>
        key: <!{credhub}:loggr_udp_forwarder_tls.private_key!>
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: diego-cell
  networks:
  - name: cf-runtime
  stemcell: default
  vm_extensions:
  - 100GB_ephemeral_disk
  vm_type: small-highmem
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - consumes:
      doppler:
        from: doppler
    name: loggregator_trafficcontroller
    properties:
      cc:
        internal_service_hostname: cloud-controller-ng.service.cf.internal
        mutual_tls:
          ca_cert: <!{credhub}:cc_tls.ca!>
        tls_port: 9023
      loggregator:
        outgoing_cert: <!{credhub}:loggregator_trafficcontroller_tls.certificate!>
        outgoing_key: <!{credhub}:loggregator_trafficcontroller_tls.private_key!>
        tls:
          ca_cert: <!{credhub}:loggregator_tls_tc.ca!>
          cc_trafficcontroller:
            cert: <!{credhub}:loggregator_tls_cc_tc.certificate!>
            key: <!{credhub}:loggregator_tls_cc_tc.private_key!>
          trafficcontroller:
            cert: <!{credhub}:loggregator_tls_tc.certificate!>
            key: <!{credhub}:loggregator_tls_tc.private_key!>
        uaa:
          client_secret: <!{credhub}:uaa_clients_doppler_secret!>
      ssl:
        skip_cert_verify: true
      system_domain: system.cf.testing.examle
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        internal_url: https://uaa.service.cf.internal:8443
    release: loggregator
  - name: reverse_log_proxy
    properties:
      loggregator:
        tls:
          ca_cert: <!{credhub}:loggregator_tls_rlp.ca!>
          reverse_log_proxy:
            cert: <!{credhub}:loggregator_tls_rlp.certificate!>
            key: <!{credhub}:loggregator_tls_rlp.private_key!>
    provides:
      reverse_log_proxy:
        as: reverse_log_proxy
        shared: true
    release: loggregator
  - name: reverse_log_proxy_gateway
    properties:
      cc:
        ca_cert: <!{credhub}:loggregator_rlp_gateway_tls_cc.ca!>
        capi_internal_addr: https://cloud-controller-ng.service.cf.internal:9023
        cert: <!{credhub}:loggregator_rlp_gateway_tls_cc.certificate!>
        common_name: cloud-controller-ng.service.cf.internal
        key: <!{credhub}:loggregator_rlp_gateway_tls_cc.private_key!>
      http:
        address: 0.0.0.0:8088
        cert: <!{credhub}:loggregator_rlp_gateway_tls.certificate!>
        key: <!{credhub}:loggregator_rlp_gateway_tls.private_key!>
      logs_provider:
        ca_cert: <!{credhub}:loggregator_rlp_gateway.ca!>
        client_cert: <!{credhub}:loggregator_rlp_gateway.certificate!>
        client_key: <!{credhub}:loggregator_rlp_gateway.private_key!>
      metrics:
        ca_cert: <!{credhub}:rlp_gateway_metrics_tls.ca!>
        cert: <!{credhub}:rlp_gateway_metrics_tls.certificate!>
        key: <!{credhub}:rlp_gateway_metrics_tls.private_key!>
        server_name: rlp_gateway_metrics
      uaa:
        ca_cert: <!{credhub}:uaa_ssl.ca!>
        client_id: doppler
        client_secret: <!{credhub}:uaa_clients_doppler_secret!>
        internal_addr: https://uaa.service.cf.internal:8443
    release: loggregator
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: <!{credhub}:nats_client_cert.certificate!>
          client_key: <!{credhub}:nats_client_cert.private_key!>
          enabled: true
      route_registrar:
        routes:
        - name: doppler
          registration_interval: 20s
          server_cert_domain_san: doppler.system.cf.testing.examle
          tls_port: 8081
          uris:
          - doppler.system.cf.testing.examle
          - '*.doppler.system.cf.testing.examle'
        - name: rlp-gateway
          registration_interval: 20s
          server_cert_domain_san: log-stream.system.cf.testing.examle
          tls_port: 8088
          uris:
          - log-stream.system.cf.testing.examle
          - '*.log-stream.system.cf.testing.examle'
    release: routing
  name: log-api
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 2
  jobs:
  - name: credhub
    properties:
      credhub:
        authentication:
          mutual_tls:
            trusted_cas:
            - <!{credhub}:diego_instance_identity_ca.ca!>
          uaa:
            ca_certs:
            - <!{credhub}:uaa_ssl.ca!>
            url: https://uaa.service.cf.internal:8443
        authorization:
          acls:
            enabled: true
          permissions:
          - actors:
            - uaa-client:credhub_admin_client
            operations:
            - read
            - write
            - delete
            - read_acl
            - write_acl
            path: /*
          - actors:
            - uaa-client:cc_service_key_client
            operations:
            - read
            path: /*
        ca_certificate: |
          <!{credhub}:credhub_tls.ca!>
        data_storage:
          database: credhub
          host: sql-db.service.cf.internal
          password: <!{credhub}:credhub_database_password!>
          port: 5524
          require_tls: false
          type: postgres
          username: credhub
        encryption:
          keys:
          - active: true
            key_properties:
              encryption_password: <!{credhub}:credhub_encryption_password!>
            provider_name: internal-provider
          providers:
          - name: internal-provider
            type: internal
        internal_url: https://credhub.service.cf.internal
        tls:
          ca: <!{credhub}:credhub_tls.ca!>
          certificate: <!{credhub}:credhub_tls.certificate!>
          private_key: <!{credhub}:credhub_tls.private_key!>
    release: credhub
  name: credhub
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  instances: 1
  jobs:
  - name: rotate_cc_database_key
    properties: {}
    release: capi
  lifecycle: errand
  name: rotate-cc-database-key
  networks:
  - name: cf-core
  stemcell: default
  vm_type: minimal
manifest_version: v16.25.0
name: blobstore-azure-cf
releases:
- name: binary-buildpack
  sha1: 6e1ff3753ac5a86e968546222bbbaaba1264d938
  url: https://bosh.io/d/github.com/cloudfoundry/binary-buildpack-release?v=1.0.40
  version: 1.0.40
- name: bpm
  sha1: 6e1187b180c3d8e6d3dafa2861147a59d4ede27e
  url: https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=1.1.14
  version: 1.1.14
- name: capi
  sha1: f57b95580fa2f555ee7be7f17a4be4db6a1fea34
  url: https://bosh.io/d/github.com/cloudfoundry/capi-release?v=1.119.0
  version: 1.119.0
- name: cf-networking
  sha1: ad1c97f03736524128c313f54b3cae16bf5bd986
  url: https://bosh.io/d/github.com/cloudfoundry/cf-networking-release?v=2.39.0
  version: 2.39.0
- name: cf-smoke-tests
  sha1: b1eb4efe1f88367708ac8cbb08dc78a09dde9c4b
  url: https://bosh.io/d/github.com/cloudfoundry/cf-smoke-tests-release?v=41.0.2
  version: 41.0.2
- name: cflinuxfs3
  sha1: 0a7bb8199a63a667569c5d1e5a3e0b1d4a7b96d2
  url: https://bosh.io/d/github.com/cloudfoundry/cflinuxfs3-release?v=0.262.0
  version: 0.262.0
- name: credhub
  sha1: f5b5ce04eee1251d352f337a6ecb794c4dba8a39
  url: https://bosh.io/d/github.com/pivotal-cf/credhub-release?v=2.11.1
  version: 2.11.1
- name: diego
  sha1: 85f71928d7d0f89e04cdf386c2ab4c3d485fa468
  url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=2.53.0
  version: 2.53.0
- name: dotnet-core-buildpack
  sha1: 60442fcaad7552b3bc26e61f77779deef46913b8
  url: https://bosh.io/d/github.com/cloudfoundry/dotnet-core-buildpack-release?v=2.3.34
  version: 2.3.34
- name: garden-runc
  sha1: d06a32a2e50faabd2df328619384089d9418f355
  url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.19.30
  version: 1.19.30
- name: go-buildpack
  sha1: b1a756e21b7a9cbf3c04e66402657a41fce7d7e6
  url: https://bosh.io/d/github.com/cloudfoundry/go-buildpack-release?v=1.9.36
  version: 1.9.36
- name: java-buildpack
  sha1: 437779c708c437f8e60b1c92f218c4d01e809b6c
  url: https://bosh.io/d/github.com/cloudfoundry/java-buildpack-release?v=4.42
  version: "4.42"
- name: loggregator
  sha1: 9eb81ddf174e826a5f4e59bc4dc6bda9007495eb
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-release?v=106.6.0
  version: 106.6.0
- name: metrics-discovery
  sha1: 073f13a065ca15e7c0c435ec71f88675f4e704d3
  url: https://bosh.io/d/github.com/cloudfoundry/metrics-discovery-release?v=3.0.6
  version: 3.0.6
- name: nats
  sha1: c8b82cebfd24e65b1079b66435aac4b48f4aa3c5
  url: https://bosh.io/d/github.com/cloudfoundry/nats-release?v=40
  version: "40"
- name: nginx-buildpack
  sha1: 8adeefbcc10e25776d364f17caa4a3fdab8c3334
  url: https://bosh.io/d/github.com/cloudfoundry/nginx-buildpack-release?v=1.1.32
  version: 1.1.32
- name: r-buildpack
  sha1: 11e2fcb1f349c88a3cc2156d55730c7eb4d143ce
  url: https://bosh.io/d/github.com/cloudfoundry/r-buildpack-release?v=1.1.22
  version: 1.1.22
- name: nodejs-buildpack
  sha1: 7be381c1e879493239619ad708d258424fe0b626
  url: https://bosh.io/d/github.com/cloudfoundry/nodejs-buildpack-release?v=1.7.62
  version: 1.7.62
- name: php-buildpack
  sha1: 9f3e8de97495074ebd0362623f23d6884297fab9
  url: https://bosh.io/d/github.com/cloudfoundry/php-buildpack-release?v=4.4.46
  version: 4.4.46
- name: pxc
  sha1: 526751fd60912322aafbb2b25f744b732501493f
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/pxc-release?v=0.39.0
  version: 0.39.0
- name: python-buildpack
  sha1: 73f6790af87c0945e9ab91036817b325b9976ee5
  url: https://bosh.io/d/github.com/cloudfoundry/python-buildpack-release?v=1.7.46
  version: 1.7.46
- name: routing
  sha1: a5b7f3b746cfa169f466c2b682db296ab8dcd0ad
  url: https://bosh.io/d/github.com/cloudfoundry/routing-release?v=0.225.0
  version: 0.225.0
- name: ruby-buildpack
  sha1: f6b4d39e0df49746cc4a41c308e6737e6c82764e
  url: https://bosh.io/d/github.com/cloudfoundry/ruby-buildpack-release?v=1.8.47
  version: 1.8.47
- name: silk
  sha1: 7728d15d5e0bc6c0a0a2124f123c99baf79b6ff7
  url: https://bosh.io/d/github.com/cloudfoundry/silk-release?v=2.39.0
  version: 2.39.0
- name: staticfile-buildpack
  sha1: 713dfd0486f32073281129ab45961031833d7998
  url: https://bosh.io/d/github.com/cloudfoundry/staticfile-buildpack-release?v=1.5.25
  version: 1.5.25
- name: statsd-injector
  sha1: 4ca93a4ab1a65a2b7cb2c84d27b6cbd725a914a9
  url: https://bosh.io/d/github.com/cloudfoundry/statsd-injector-release?v=1.11.16
  version: 1.11.16
- name: uaa
  sha1: 57ffc783177cbca45a983cc573b591b636d0c0bf
  url: https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=75.14.0
  version: 75.14.0
- name: loggregator-agent
  sha1: 9dd3ad00fb49bebd8290fad8ce7b2e4992dac31f
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=6.3.4
  version: 6.3.4
- name: log-cache
  sha1: f91e89e494ac4f9010f33a9567335dc713287fec
  url: https://bosh.io/d/github.com/cloudfoundry/log-cache-release?v=2.11.4
  version: 2.11.4
- name: bosh-dns-aliases
  sha1: 55b3dced813ff9ed92a05cda02156e4b5604b273
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-aliases-release?v=0.0.4
  version: 0.0.4
- name: cf-cli
  sha1: c3d11f473d4518505e2a671d8ad6a553e1b1c1ca
  url: https://bosh.io/d/github.com/bosh-packages/cf-cli-release?v=1.34.0
  version: 1.34.0
- name: postgres
  sha1: e44bbe8f8a7cdde1cda67b202e399a239d104db6
  url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=43
  version: "43"
stemcells:
- alias: default
  os: ubuntu-bionic
  version: "1.54"
update:
  canaries: 1
  canary_watch_time: 30000-1200000
  max_in_flight: 1
  serial: false
  update_watch_time: 5000-1200000
variables: []
