---
genesis:
  env:           (( grab $GENESIS_ENVIRONMENT ))
  secrets_mount: (( grab $GENESIS_SECRETS_MOUNT ))
  vault_prefix:  (( grab $GENESIS_VAULT_PREFIX ))
  vault_env:     (( grab $GENESIS_VAULT_ENV_SLUG ))

meta:
  vault: (( concat genesis.secrets_mount genesis.vault_prefix ))

  __default_tags:
  - (( grab meta.tag || meta.name ))

  __default_vm_extentions:
  - 100GB_ephemeral_disk

instance_groups:
- name: (( grab meta.name ))
  instances: (( grab meta.instances || 1 ))
  azs: (( grab meta.azs || "(( grab meta.azs ))" ))
  networks:
  - name: (( grab meta.network_name || "default" ))
  vm_type: (( grab meta.vm_type || "(( grab params.diego-cell_vm_type || params.diego_cell_vm_type || \"small-highmem\" ))" ))
  vm_extensions: (( grab meta.vm_extensions || meta.__default_vm_extentions ))
  stemcell: (( grab meta.stemcell || "default" ))
  jobs:
  - name: cfdot
    .: (( defer inject instance_groups.diego-cell.jobs.cfdot ))

  - name: garden-cni
    .: (( defer inject instance_groups.diego-cell.jobs.garden-cni ))

  - name: netmon
    .: (( defer inject instance_groups.diego-cell.jobs.netmon ))
    consumes:
      iptables:
        from: (( concat "iptables-" meta.name ))

  - name: vxlan-policy-agent
    .: (( defer inject instance_groups.diego-cell.jobs.vxlan-policy-agent ))
    provides:
      vpa:
        as: (( concat "vpa-" meta.name ))
    consumes:
      iptables:
        from: (( concat "iptables-" meta.name ))
      cni_config:
        from: (( concat "cni_config-" meta.name ))

  - name: silk-daemon
    .: (( defer inject instance_groups.diego-cell.jobs.silk-daemon ))
    consumes:
      vpa:
        from: (( concat "vpa-" meta.name ))
      iptables:
        from: (( concat "iptables-" meta.name ))

  - name: silk-cni
    .: (( defer inject instance_groups.diego-cell.jobs.silk-cni ))
    consumes:
      vpa:
        from: (( concat "vpa-" meta.name ))
    provides:
      cni_config:
        as: (( concat "cni_config-" meta.name ))

  - name: loggr-udp-forwarder
    .: (( defer inject instance_groups.diego-cell.jobs.loggr-udp-forwarder ))

  - name: bosh-dns-adapter
    properties:
      internal_domains: ["apps.internal."]
      dnshttps:
        client:
          tls: ((cf_app_sd_client_tls))
        server:
          ca: ((cf_app_sd_client_tls.ca))
    release: cf-networking
  - name: cflinuxfs3-rootfs-setup
    release: cflinuxfs3
    properties:
      cflinuxfs3-rootfs:
        trusted_certs:
        - ((diego_instance_identity_ca.ca))
        - ((credhub_tls.ca))
        - ((uaa_ssl.ca))
  - name: cflinuxfs4-rootfs-setup
    release: cflinuxfs4
    properties:
      cflinuxfs4-rootfs:
        trusted_certs:
        - ((diego_instance_identity_ca.ca))
        - ((credhub_tls.ca))
        - ((uaa_ssl.ca))
  - name: garden
    release: garden-runc
    provides:
      iptables:
        as: (( concat "iptables-" meta.name ))

    properties:
      garden:
        containerd_mode: true
        cleanup_process_dirs_on_wait: true
        default_container_grace_time: 0
        destroy_containers_on_start: true
        graph_cleanup_threshold_in_mb: 0
        deny_networks:
        - 0.0.0.0/0
        network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
        network_plugin_extra_args:
        - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
      logging:
        format:
          timestamp: "rfc3339"
  - name: rep
    release: diego
    properties:
      bpm:
        enabled: true
      diego:
        executor:
          instance_identity_ca_cert: ((diego_instance_identity_ca.certificate))
          instance_identity_key: ((diego_instance_identity_ca.private_key))
        rep:
          preloaded_rootfses:
          - cflinuxfs3:/var/vcap/packages/cflinuxfs3/rootfs.tar
          - cflinuxfs4:/var/vcap/packages/cflinuxfs4/rootfs.tar
          placement_tags: (( grab meta.tags || meta.__default_tags ))
      containers:
        proxy:
          enabled: true
          require_and_verify_client_certificates: true
          trusted_ca_certificates:
          - ((gorouter_backend_tls.ca))
          - ((ssh_proxy_backends_tls.ca))
          verify_subject_alt_name:
          - gorouter.service.cf.internal
          - ssh-proxy.service.cf.internal
        trusted_ca_certificates:
        - ((diego_instance_identity_ca.ca))
        - ((credhub_tls.ca))
        - ((uaa_ssl.ca))
      enable_consul_service_registration: false
      enable_declarative_healthcheck: true
      loggregator:
        use_v2_api: true
        ca_cert: "((loggregator_tls_agent.ca))"
        cert: "((loggregator_tls_agent.certificate))"
        key: "((loggregator_tls_agent.private_key))"
      tls:
        ca_cert: "((diego_rep_agent_v2.ca))"
        cert: "((diego_rep_agent_v2.certificate))"
        key: "((diego_rep_agent_v2.private_key))"
      logging:
        format:
          timestamp: "rfc3339"
  - name: route_emitter
    release: diego
    consumes:
      nats-tls:
        ip_addresses: false
    properties:
      bpm:
        enabled: true
      loggregator:
        use_v2_api: true
        ca_cert: "((loggregator_tls_agent.ca))"
        cert: "((loggregator_tls_agent.certificate))"
        key: "((loggregator_tls_agent.private_key))"
      diego:
        route_emitter:
          local_mode: true
          bbs:
            ca_cert: "((diego_bbs_client.ca))"
            client_cert: "((diego_bbs_client.certificate))"
            client_key: "((diego_bbs_client.private_key))"
          nats:
            tls:
              enabled: true
              client_cert: "((nats_client_cert.certificate))"
              client_key: "((nats_client_cert.private_key))"
      internal_routes:
        enabled: true
      logging:
        format:
          timestamp: "rfc3339"
      tcp:
        enabled: true
      uaa:
        ca_cert: "((uaa_ssl.ca))"
        client_secret: "((uaa_clients_tcp_emitter_secret))"

addons:
- name: bosh-dns-aliases
  jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - domain: _.cell.service.cf.internal
        targets:
        - (( defer append ))
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: (( grab meta.name ))
          network: (( grab meta.network_name || "default" ))
          query: _
    release: bosh-dns-aliases
