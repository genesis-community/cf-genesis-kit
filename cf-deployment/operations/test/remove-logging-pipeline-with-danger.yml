---
# Linux
- type: remove
  path: /addons/name=loggregator_agent?

- type: replace
  path: /addons/name=prom_scraper/jobs/name=prom_scraper/properties/loggregator_agent?
  value:
    tls:
      ca_cert: "((loggregator_tls_agent.ca))"
      cert: "((loggregator_tls_agent.certificate))"
      key: "((loggregator_tls_agent.private_key))"

- type: remove
  path: /instance_groups/name=log-api?

- type: remove
  path: /variables/name=loggregator_agent_metrics_tls?

- type: remove
  path: /instance_groups/name=scheduler/jobs/name=loggr-system-metric-scraper?

- type: remove
  path: /instance_groups/name=doppler?

# metric-store is dependent on Loggregator, it won't work if the v2 firehose is disabled
- type: remove
  path: /instance_groups/name=metric-store?

- type: replace
  path: /instance_groups/name=log-cache?
  value:
    name: log-cache
    azs:
    - z1
    - z2
    instances: 4
    vm_type: minimal
    stemcell: default
    networks:
    - name: default
    jobs:
    - name: log-cache
      provides:
        log-cache: {shared: true}
      properties:
        metrics:
          ca_cert: "((log_cache_metrics_tls.ca))"
          cert: "((log_cache_metrics_tls.certificate))"
          key: "((log_cache_metrics_tls.private_key))"
          server_name: log_cache_metrics
        health_addr: localhost:6060
        tls:
          ca_cert: ((log_cache.ca))
          cert: ((log_cache.certificate))
          key: ((log_cache.private_key))
      release: log-cache
    - name: log-cache-gateway
      properties:
        gateway_addr: localhost:8081
        proxy_cert: "((log_cache_proxy_tls.certificate))"
        proxy_key: "((log_cache_proxy_tls.private_key))"
        metrics:
          ca_cert: "((log_cache_gateway_metrics_tls.ca))"
          cert: "((log_cache_gateway_metrics_tls.certificate))"
          key: "((log_cache_gateway_metrics_tls.private_key))"
          server_name: log_cache_gateway_metrics
      release: log-cache
    - name: route_registrar
      properties:
        route_registrar:
          routes:
          - name: log-cache-reverse-proxy
            port: 8083
            tls_port: 8083
            registration_interval: 20s
            server_cert_domain_san: log-cache.((system_domain))
            uris:
            - log-cache.((system_domain))
            - '*.log-cache.((system_domain))'
      release: routing
    - name: log-cache-cf-auth-proxy
      properties:
        metrics:
          ca_cert: "((log_cache_cf_auth_proxy_metrics_tls.ca))"
          cert: "((log_cache_cf_auth_proxy_metrics_tls.certificate))"
          key: "((log_cache_cf_auth_proxy_metrics_tls.private_key))"
          server_name: log_cache_cf_auth_proxy_metrics
        cc:
          ca_cert: ((cc_tls.ca))
          common_name: cloud-controller-ng.service.cf.internal
        proxy_ca_cert: "((log_cache.ca))"
        proxy_port: 8083
        external_cert: ((logcache_ssl.certificate))
        external_key: ((logcache_ssl.private_key))
        uaa:
          ca_cert: ((uaa_ssl.ca))
          client_id: doppler
          client_secret: ((uaa_clients_doppler_secret))
          internal_addr: https://uaa.service.cf.internal:8443
      release: log-cache