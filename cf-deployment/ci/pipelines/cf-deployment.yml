---
groups:
- name: cf-deployment
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - branch-freshness
  - fresh-acquire-pool
  - fresh-deploy
  - fresh-smoke-tests
  - fresh-cats
  - fresh-delete-deployment
  - upgrade-acquire-pool
  - upgrade-deploy
  - upgrade-cats
  - upgrade-cats-windows
  - upgrade-delete-deployment
  - experimental-acquire-pool
  - experimental-deploy
  - experimental-smoke-tests
  - experimental-cats
  - experimental-delete-deployment
  - lite-acquire-pool
  - lite-deploy
  - lite-cats
  - lite-recreate-director
  - bbr-acquire-pool
  - bbr-deploy
  - bbr-run-drats
  - bbr-release-pool
  - bless-manifest
  - ship-it-patch
  - ship-it-minor
  - ship-it-major
  - release-notes-template
- name: fr
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - fresh-acquire-pool
  - fresh-release-pool-manual
  - fresh-deploy
  - fresh-smoke-tests
  - fresh-cats
  - fresh-delete-deployment
  - bless-manifest
- name: up
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - upgrade-acquire-pool
  - upgrade-deploy
  - upgrade-cats
  - upgrade-cats-windows
  - upgrade-release-pool-manual
  - upgrade-delete-deployment
  - bless-manifest
- name: ex
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - experimental-acquire-pool
  - experimental-cats
  - experimental-deploy
  - experimental-delete-deployment
  - experimental-release-pool-manual
  - experimental-smoke-tests
  - experimental-ops-files
  - bless-manifest
- name: li
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - lite-acquire-pool
  - lite-cats
  - lite-deploy
  - lite-recreate-director
  - lite-release-pool-manual
  - bless-manifest
- name: bbr
  jobs:
  - unit-test-ops-files
  - unit-test-golang-tests
  - unit-test-update-releases-coverage
  - lint-cf-deployment-manifest
  - bbr-acquire-pool
  - bbr-deploy
  - bbr-run-drats
  - bbr-release-pool
  - bbr-release-pool-manual
  - bless-manifest
- name: st
  jobs:
  - stable-acquire-pool
  - stable-release-pool-manual
  - stable-deploy
  - stable-smoke-tests
  - stable-semihourly-pool-acquisition
  - stable-periodic-cats
  - cleanup-stable-periodic-cats
  - stable-update-cats-cfd-branch
- name: ship-it
  jobs:
  - ship-it-patch
  - ship-it-minor
  - ship-it-major
  - release-notes-template

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: bosh-deployment-v2
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: fresh-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/fresh
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: upgrade-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/upgrade
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: experimental-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/experimental
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: lite-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/lite
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: bbr-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: bbr
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: stable-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: relint-envs
  type: git
  icon: github-box
  source:
    branch: master
    uri: git@github.com:cloudfoundry/relint-envs.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

- name: half-hourly
  type: time
  icon: clock-outline
  source:
    interval: 30m

- name: cf-deployment-concourse-tasks
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: bosh-bootloader
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader

- name: cf-deployment-develop
  type: git
  icon: github-box
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    ignore_paths:
    - .envrc
    - .overcommit.yml
    - ISSUE_TEMPLATE.md
    - PULL_REQUEST_TEMPLATE.md
    - ci/**
    - texts/**

- name: cf-deployment-release-candidate
  type: git
  icon: github-box
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    ignore_paths:
    - .envrc
    - .overcommit.yml
    - ISSUE_TEMPLATE.md
    - PULL_REQUEST_TEMPLATE.md
    - ci/**
    - texts/**

- name: cf-deployment-master
  type: git
  icon: github-box
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    ignore_paths:
    - .envrc
    - .overcommit.yml
    - ISSUE_TEMPLATE.md
    - PULL_REQUEST_TEMPLATE.md
    - ci/**
    - texts/**

- name: cf-deployment-all-branches
  type: git
  icon: github-box
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-deployment.git
    ignore_paths:
    - .envrc
    - .overcommit.yml
    - ISSUE_TEMPLATE.md
    - PULL_REQUEST_TEMPLATE.md
    - ci/**
    - texts/**

- name: cf-acceptance-tests-rc
  type: git
  icon: github-box
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
    private_key: ((cf_acceptance_tests_readwrite_deploy_key.private_key))

- name: cf-smoke-tests
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-smoke-tests

- name: bosh-deployment
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: cf-deployment-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-relint-ci-semver.git
    branch: master
    private_key: ((cf_relint_ci_semver_readwrite_deploy_key.private_key))
    git_user: "CF MEGA BOT <cf-mega@pivotal.io>"
    file: cf-deployment-version

- name: deliver-tracker-story
  type: tracker
  source:
    token: ((cf_relint_tracker_api_token))
    project_id: "1382120"
    tracker_url: https://www.pivotaltracker.com

- name: drats-master
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

- name: bbr-github-release
  type: github-release
  icon: github-face
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore

- name: trelawney-external-resources
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: trelawney-upgrade-external-resource-state
      credentials: ((trelawney_gcp_service_account_json))
    env_name: trelawney
    vars:
      cf_db_name: "terraform-20191021190301485500000002"
      project: "cf-relint-trelawney"
      region: "us-central1"
      service_account_key: ((trelawney_gcp_service_account_json))

jobs:
- name: unit-test-ops-files
  serial: true
  public: true
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: unit-test-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      params:
        RUN_SEMANTIC: true
      run:
        dir: cf-deployment-develop
        path: scripts/test

- name: unit-test-golang-tests
  serial: true
  public: true
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: unit-test-golang-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      # params:
      #   RUN_SEMANTIC: true
      run:
        dir: cf-deployment-develop/units
        path: ./test

- name: unit-test-update-releases-coverage
  serial: true
  public: true
  plan:
  - get: cf-deployment-develop
    trigger: true
  - get: runtime-ci
  - task: unit-test-update-releases-coverage
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/bosh-cli
      inputs:
      - name: cf-deployment-develop
      - name: runtime-ci
      run:
        dir: runtime-ci
        path: scripts/tests/update-releases-coverage-test

- name: lint-cf-deployment-manifest
  serial: false
  public: true
  plan:
  - get: cf-deployment-develop
    trigger: true
  - task: lint-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: cf-deployment-develop
      run:
        path: /bin/bash
        args:
        - -exc
        - |
          ruby -e "require 'yaml'; YAML.load_file('./cf-deployment-develop/cf-deployment.yml')"

- name: branch-freshness
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-all-branches
      trigger: true
    - get: runtime-ci
  - task: validate-branch-freshness
    file: runtime-ci/tasks/validate-branch-freshness/task.yml
    input_mapping:
      repo: cf-deployment-all-branches

- name: fresh-acquire-pool
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-develop
      trigger: true
      passed:
      - unit-test-ops-files
      - lint-cf-deployment-manifest
      - unit-test-golang-tests
      - unit-test-update-releases-coverage
    - put: fresh-pool
      params: {acquire: true}
    timeout: 4h

- name: fresh-release-pool-manual
  public: true
  plan:
  - get: fresh-pool
  ensure:
    try:
      put: fresh-pool
      params: {release: fresh-pool}

- name: fresh-deploy
  serial_groups: [ luna-smokes ]
  public: true
  plan:
  - get: fresh-pool
    trigger: true
    passed: [fresh-acquire-pool]
  - in_parallel:
    - get: cf-deployment-develop
      passed: [fresh-acquire-pool]
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: relint-envs
    - get: cf-smoke-tests
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/luna/bbl-state
      DEPLOYMENT_NAME: luna-cf
      IGNORE_ERRORS: true
  - task: collect-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-develop
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: operations
      NEW_OPS_FILES: |
        environments/test/luna/rename-isolation-segment-network.yml
        environments/test/luna/change-postgres-max-connections.yml
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-develop
      ops-files: collected-ops-files
      vars-files: relint-envs
    params:
      BBL_STATE_DIR: environments/test/luna/bbl-state
      SYSTEM_DOMAIN: luna.cf-app.com
      OPS_FILES: |
        operations/experimental/fast-deploy-with-downtime-and-danger.yml
        operations/rename-network-and-deployment.yml
        operations/set-bbs-active-key.yml
        operations/test/add-persistent-isolation-segment-diego-cell.yml
        operations/test/add-persistent-isolation-segment-router.yml
        operations/rename-isolation-segment-network.yml
        operations/addons/enable-component-syslog.yml
        operations/use-postgres.yml
        operations/experimental/enable-tls-cloud-controller-postgres.yml
        operations/change-postgres-max-connections.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/enable-tls-on-file-server.yml
      VARS_FILES: |
        environments/test/luna/deployment-name.yml
        environments/test/luna/network-name.yml
        environments/test/luna/bbs-key-label.yml
        environments/test/luna/syslog-vars.yml
      REGENERATE_CREDENTIALS: true
  - task: ensure-gcloud-backend-service-healthy
    file: runtime-ci/tasks/ensure-gcloud-backend-service-healthy/task.yml
    input_mapping:
      google-creds-dir: relint-envs
    params:
      GCP_PROJECT_ID: ((luna_gcp_project))
      GCP_BACKEND_SERVICE: ((luna_router_backend_service))
      GOOGLE_ACCOUNT_CREDS_PATH: environments/test/luna/google_account_creds.json
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      BBL_STATE_DIR: environments/test/luna/bbl-state
      CATS_INTEGRATION_CONFIG_FILE: environments/test/luna/integration_config.json
    input_mapping:
      bbl-state: relint-envs
      integration-configs: relint-envs
  - in_parallel:
    - task: ensure-api-healthy
      file: runtime-ci/tasks/ensure-api-healthy/task.yml
      input_mapping:
        cats-integration-config: relint-envs
      params:
        CONFIG_FILE_PATH: environments/test/luna/integration_config.json
    - task: ensure-isolation-segment-healthy
      file: runtime-ci/tasks/ensure-api-healthy/task.yml
      input_mapping:
        cats-integration-config: updated-integration-configs
      params:
        CHECK_ISOLATION_SEGMENT: true
        CONFIG_FILE_PATH: environments/test/luna/integration_config.json
  - in_parallel:
    - task: open-asgs-for-credhub
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
        BOSH_DEPLOYMENT: luna-cf
        INSTANCE_GROUP_NAME: credhub
        SYSTEM_DOMAIN: luna.cf-app.com
        SECURITY_GROUP_NAME: credhub
    - task: open-asgs-for-uaa
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
        BOSH_DEPLOYMENT: luna-cf
        INSTANCE_GROUP_NAME: uaa
        SYSTEM_DOMAIN: luna.cf-app.com
        SECURITY_GROUP_NAME: uaa
    - task: enable-docker-and-tasks
      attempts: 2
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
        SYSTEM_DOMAIN: luna.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation

- name: fresh-smoke-tests
  public: true
  serial_groups: [ luna-smokes ]
  plan:
  - do:
    - get: fresh-pool
      passed: [ fresh-deploy ]
      trigger: true
    - in_parallel:
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [ fresh-deploy ]
      - get: cf-deployment-concourse-tasks
    timeout: 1h
  - task: bosh-run-errand-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: environments/test/luna/bbl-state
      ERRAND_NAME: smoke-tests
      DEPLOYMENT_NAME: luna-cf
    input_mapping:
      bbl-state: relint-envs

- name: fresh-cats
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed: [ fresh-deploy ]
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests-rc
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [ fresh-deploy ]
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/luna/integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CONFIG_FILE_PATH: environments/test/luna/integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/luna/reporter_config.json
        CAPTURE_LOGS: true
        RELINT_VERBOSE_AUTH: "true"

- name: fresh-delete-deployment
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: fresh-pool
      trigger: true
      passed:
      - fresh-cats
      - fresh-smoke-tests
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: relint-envs
    - task: delete-deployment-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
        DEPLOYMENT_NAME: luna-cf
        IGNORE_ERRORS: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/luna/bbl-state
    - put: fresh-pool
      params: {release: fresh-pool}

- name: upgrade-acquire-pool
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-develop
      trigger: true
      passed:
      - unit-test-ops-files
      - lint-cf-deployment-manifest
      - unit-test-golang-tests
      - unit-test-update-releases-coverage
    - put: upgrade-pool
      params: {acquire: true}
    timeout: 4h

- name: upgrade-release-pool-manual
  public: true
  plan:
  - get: upgrade-pool
  ensure:
    try:
      put: upgrade-pool
      params: {release: upgrade-pool}

- name: upgrade-deploy
  serial: true
  public: true
  plan:
  - get: upgrade-pool
    trigger: true
    passed: [upgrade-acquire-pool]
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-master
    - get: cf-deployment-develop
      passed: [upgrade-acquire-pool]
    - get: relint-envs
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      IGNORE_ERRORS: true
  - try:
      put: trelawney-external-resources
      params:
        action: destroy
        terraform_source: relint-envs/environments/test/trelawney/external-resource-templates
      get_params:
        action: destroy
  - put: trelawney-external-resources
    params:
      terraform_source: relint-envs/environments/test/trelawney/external-resource-templates
      delete_on_failure: true
  - task: collect-ops-files-latest-release
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-master
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: operations
      NEW_OPS_FILES: |
        environments/test/trelawney/add-external-ips-for-cloud-sql-db.yml
        environments/test/trelawney/increase-doppler-vm-type-from-minimal-to-small.yml
        environments/test/trelawney/scale-log-api-to-4.yml
  - task: setup-external-ip-db-vars
    file: runtime-ci/tasks/generate-external-ip-db-vars/task.yml
    input_mapping:
      bbl-state: relint-envs
    output_mapping:
      updated-bbl-state: updated-bbl-state-with-db-vars
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      VARS_DIR: environments/test/trelawney
  - task: bosh-deploy-cf-latest-release
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-master
      ops-files: collected-ops-files
      vars-files: updated-bbl-state-with-db-vars
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      SYSTEM_DOMAIN: trelawney.cf-app.com
      OPS_FILES: |
        operations/use-compiled-releases.yml
        operations/use-external-dbs.yml
        operations/add-external-ips-for-cloud-sql-db.yml
        operations/windows2012R2-cell.yml
        operations/windows1803-cell.yml
        operations/experimental/use-compiled-releases-windows.yml
        operations/use-external-blobstore.yml
        operations/use-gcs-blobstore-service-account.yml
        operations/enable-service-discovery.yml
        operations/test/add-persistent-isolation-segment-diego-cell.yml
        operations/increase-doppler-vm-type-from-minimal-to-small.yml
        operations/scale-log-api-to-4.yml
        operations/use-internal-lookup-for-route-services.yml
      VARS_FILES: |
        environments/test/trelawney/external-db-vars.yml
        environments/test/trelawney/external-public-ip-vars.yml
        environments/test/trelawney/external-db-host-vars.yml
        environments/test/trelawney/gcs-vars.yml
      REGENERATE_CREDENTIALS: true
  - task: bosh-run-errand-smoke-tests-latest-release
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      ERRAND_NAME: smoke-tests
    input_mapping:
      bbl-state: relint-envs
  - task: add-tcp-domain
    file: runtime-ci/tasks/add-tcp-domain/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      SYSTEM_DOMAIN: trelawney.cf-app.com
  - task: collect-ops-files-develop
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-develop
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: operations
      NEW_OPS_FILES: |
        environments/test/trelawney/add-external-ips-for-cloud-sql-db.yml
        environments/test/trelawney/increase-doppler-vm-type-from-minimal-to-small.yml
        environments/test/trelawney/scale-log-api-to-4.yml
  - task: bosh-deploy-cf-develop
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-develop
      ops-files: collected-ops-files
      vars-files: updated-bbl-state-with-db-vars
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      SYSTEM_DOMAIN: trelawney.cf-app.com
      OPS_FILES: |
        operations/use-compiled-releases.yml
        operations/use-external-dbs.yml
        operations/add-external-ips-for-cloud-sql-db.yml
        operations/windows2012R2-cell.yml
        operations/windows1803-cell.yml
        operations/experimental/use-compiled-releases-windows.yml
        operations/use-external-blobstore.yml
        operations/use-gcs-blobstore-service-account.yml
        operations/enable-service-discovery.yml
        operations/test/add-persistent-isolation-segment-diego-cell.yml
        operations/increase-doppler-vm-type-from-minimal-to-small.yml
        operations/scale-log-api-to-4.yml
        operations/use-internal-lookup-for-route-services.yml
      VARS_FILES: |
        environments/test/trelawney/external-db-vars.yml
        environments/test/trelawney/external-public-ip-vars.yml
        environments/test/trelawney/external-db-host-vars.yml
        environments/test/trelawney/gcs-vars.yml
      DEPLOY_WITH_UPTIME_MEASUREMENTS: true
      FAIL_ON_DOWNTIME: true
      HTTP_AVAILABILITY_THRESHOLD: 0
      APP_PUSHABILITY_THRESHOLD: 10
      RECENT_LOGS_THRESHOLD: 10000
      STREAMING_LOGS_THRESHOLD: 10000
  - in_parallel:
    - task: open-asgs-for-credhub
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/trelawney/bbl-state
        INSTANCE_GROUP_NAME: credhub
        SYSTEM_DOMAIN: trelawney.cf-app.com
        SECURITY_GROUP_NAME: credhub
    - task: open-asgs-for-uaa
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/trelawney/bbl-state
        INSTANCE_GROUP_NAME: uaa
        SYSTEM_DOMAIN: trelawney.cf-app.com
        SECURITY_GROUP_NAME: uaa
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/trelawney/bbl-state
        SYSTEM_DOMAIN: trelawney.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
          service_instance_sharing

- name: upgrade-cats
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [upgrade-deploy]
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests-rc
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [upgrade-deploy]
    - task: update-integration-config
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/trelawney/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/trelawney/integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CONFIG_FILE_PATH: environments/test/trelawney/integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/trelawney/reporter_config.json
        CAPTURE_LOGS: true
        RELINT_VERBOSE_AUTH: "true"

- name: upgrade-cats-windows
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: upgrade-pool
      trigger: true
      passed: [upgrade-deploy]
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests-rc
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [upgrade-deploy]
    - task: update-cats-windows-integration-config
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/trelawney/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/trelawney/cats_windows_integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CAPTURE_LOGS: true
        CONFIG_FILE_PATH: environments/test/trelawney/cats_windows_integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/trelawney/reporter_config.json
        NODES: 8
        RELINT_VERBOSE_AUTH: "true"

- name: upgrade-delete-deployment
  serial: true
  public: true
  plan:
  - get: upgrade-pool
    trigger: true
    passed:
    - upgrade-cats
    - upgrade-cats-windows
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: relint-envs
  - task: delete-deployment-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
      IGNORE_ERRORS: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/trelawney/bbl-state
  - try:
      put: trelawney-external-resources
      params:
        action: destroy
        terraform_source: relint-envs/environments/test/trelawney/external-resource-templates
      get_params:
        action: destroy
  - put: upgrade-pool
    params: {release: upgrade-pool}

- name: experimental-acquire-pool
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: cf-deployment-develop
      trigger: true
      passed:
      - unit-test-ops-files
      - lint-cf-deployment-manifest
      - unit-test-golang-tests
      - unit-test-update-releases-coverage
    - put: experimental-pool
      params: {acquire: true}
    timeout: 4h

- name: experimental-release-pool-manual
  public: true
  plan:
  - get: experimental-pool
  ensure:
    try:
      put: experimental-pool
      params: {release: experimental-pool}

- name: experimental-deploy
  serial_groups: [ hermione-cats, hermione-smokes ]
  public: true
  plan:
  - get: experimental-pool
    trigger: true
    passed: [ experimental-acquire-pool ]
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-master
    - get: cf-deployment-develop
      passed: [ experimental-acquire-pool ]
    - get: relint-envs
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      IGNORE_ERRORS: true
  - task: collect-ops-files-latest-release
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-master
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: operations
      NEW_OPS_FILES: |
        environments/test/hermione/increase-doppler-vm-type-from-minimal-to-small.yml
  - task: bosh-deploy-cf-latest-release
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-master
      ops-files: collected-ops-files
      vars-files: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      SYSTEM_DOMAIN: hermione.cf-app.com
      OPS_FILES: |
        operations/experimental/fast-deploy-with-downtime-and-danger.yml
        operations/aws.yml
        operations/use-compiled-releases.yml
        operations/use-external-blobstore.yml
        operations/use-s3-blobstore.yml
        operations/scale-database-cluster.yml
        operations/stop-skipping-tls-validation.yml
        operations/use-operator-provided-router-tls-certificates.yml
        operations/experimental/enable-iptables-logger.yml
        operations/experimental/set-cpu-weight.yml
        operations/experimental/use-logcache-for-cloud-controller-app-stats.yml
        operations/experimental/add-syslog-agent.yml
        operations/experimental/add-metrics-discovery.yml
        operations/experimental/enable-containerd-for-processes.yml
        operations/increase-doppler-vm-type-from-minimal-to-small.yml
      VARS_FILES: |
        environments/test/hermione/bbl-state/vars/director-vars-file.yml
        environments/test/hermione/vars-use-operator-provided-router-tls-certificates.yml
      REGENERATE_CREDENTIALS: true
  - task: bosh-run-errand-smoke-tests-latest-release
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      ERRAND_NAME: smoke-tests
    input_mapping:
      bbl-state: relint-envs
  - task: add-tcp-domain
    file: runtime-ci/tasks/add-tcp-domain/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      SYSTEM_DOMAIN: hermione.cf-app.com
  - task: collect-ops-files-develop
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-develop
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: operations
      NEW_OPS_FILES: |
        environments/test/hermione/increase-doppler-vm-type-from-minimal-to-small.yml
  - task: bosh-deploy-cf-develop
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-develop
      ops-files: collected-ops-files
      vars-files: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      SYSTEM_DOMAIN: hermione.cf-app.com
      OPS_FILES: |
        operations/aws.yml
        operations/use-compiled-releases.yml
        operations/use-external-blobstore.yml
        operations/use-s3-blobstore.yml
        operations/scale-database-cluster.yml
        operations/stop-skipping-tls-validation.yml
        operations/use-operator-provided-router-tls-certificates.yml
        operations/experimental/enable-iptables-logger.yml
        operations/experimental/set-cpu-weight.yml
        operations/experimental/use-logcache-for-cloud-controller-app-stats.yml
        operations/experimental/add-syslog-agent.yml
        operations/experimental/enable-oci-phase-1.yml
        operations/experimental/add-metrics-discovery.yml
        operations/experimental/enable-containerd-for-processes.yml
        operations/increase-doppler-vm-type-from-minimal-to-small.yml
      VARS_FILES: |
        environments/test/hermione/bbl-state/vars/director-vars-file.yml
        environments/test/hermione/vars-use-operator-provided-router-tls-certificates.yml
      DEPLOY_WITH_UPTIME_MEASUREMENTS: true
      FAIL_ON_DOWNTIME: true
      HTTP_AVAILABILITY_THRESHOLD: 0
      APP_PUSHABILITY_THRESHOLD: 10
      RECENT_LOGS_THRESHOLD: 10000
      STREAMING_LOGS_THRESHOLD: 10000
  - in_parallel:
    - task: open-asgs-for-credhub
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/hermione/bbl-state
        INSTANCE_GROUP_NAME: credhub
        SYSTEM_DOMAIN: hermione.cf-app.com
        SECURITY_GROUP_NAME: credhub
    - task: open-asgs-for-uaa
      file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/hermione/bbl-state
        INSTANCE_GROUP_NAME: uaa
        SYSTEM_DOMAIN: hermione.cf-app.com
        SECURITY_GROUP_NAME: uaa
    - task: set-feature-flags
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/hermione/bbl-state
        SYSTEM_DOMAIN: hermione.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
          service_instance_sharing

- name: experimental-ops-files
  public: true
  plan:
  - in_parallel:
    - get: experimental-pool
      trigger: true
      passed: [ experimental-acquire-pool ]
    - get: runtime-ci
  - task: experimental-ops-files
    file: runtime-ci/tasks/summarize-ops-files/task.yml

- name: experimental-smoke-tests
  public: true
  serial_groups: [ hermione-smokes ]
  plan:
  - do:
    - get: experimental-pool
      passed: [ experimental-deploy ]
      trigger: true
    - in_parallel:
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [ experimental-deploy ]
      - get: cf-deployment-concourse-tasks
    timeout: 1h
  - task: bosh-run-errand-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      ERRAND_NAME: smoke-tests
    input_mapping:
      bbl-state: relint-envs

- name: experimental-cats
  serial_groups: [ hermione-cats ]
  public: true
  plan:
  - timeout: 4h
    do:
    - get: experimental-pool
      trigger: true
      passed: [ experimental-deploy ]
    - in_parallel:
      - get: cf-acceptance-tests-rc
      - get: relint-envs
      - get: cf-deployment-develop
        passed: [ experimental-deploy ]
      - get: cf-deployment-concourse-tasks
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/hermione/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/hermione/integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      params:
        CONFIG_FILE_PATH: environments/test/hermione/integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/hermione/reporter_config.json
        RELINT_VERBOSE_AUTH: "true"

- name: experimental-delete-deployment
  serial: true
  public: true
  plan:
  - get: experimental-pool
    trigger: true
    passed:
    - experimental-cats
    - experimental-smoke-tests
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: relint-envs
  - task: delete-deployment-cf
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
      IGNORE_ERRORS: true
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/hermione/bbl-state
  - put: experimental-pool
    params: {release: experimental-pool}

- name: lite-acquire-pool
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-develop
      trigger: true
      passed:
      - unit-test-ops-files
      - lint-cf-deployment-manifest
      - unit-test-golang-tests
      - unit-test-update-releases-coverage
    - put: lite-pool
      params: {acquire: true}
    timeout: 4h

- name: lite-release-pool-manual
  public: true
  plan:
  - get: lite-pool
  ensure:
    try:
      put: lite-pool
      params: {release: lite-pool}

- name: lite-deploy
  public: true
  serial_groups: [ snitch-cats ]
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [lite-acquire-pool]
    - in_parallel:
      - get: runtime-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment-develop
        passed: [lite-acquire-pool]
      - get: bosh-deployment
      - get: relint-envs
    - task: guarantee-no-existing-cf-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        IGNORE_ERRORS: true
        BBL_STATE_DIR: environments/test/snitch/bbl-state
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment-develop
        new-ops-files: relint-envs
      params:
        BASE_OPS_FILE_DIR: operations
        NEW_OPS_FILES: |
          environments/test/snitch/use-default-route-registrar-timeout-for-api.yml
          environments/test/snitch/use-debug-level-logging.yml
    - task: bosh-deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: relint-envs
        cf-deployment: cf-deployment-develop
        ops-files: collected-ops-files
        vars-files: relint-envs
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
        SYSTEM_DOMAIN: snitch.cf-app.com
        OPS_FILES: |
          operations/use-default-route-registrar-timeout-for-api.yml
          operations/experimental/fast-deploy-with-downtime-and-danger.yml
          operations/use-compiled-releases.yml
          operations/bosh-lite.yml
          operations/use-debug-level-logging.yml
          operations/use-internal-lookup-for-route-services.yml
        REGENERATE_CREDENTIALS: true
        BOSH_LITE: true
    - task: ensure-api-healthy
      file: runtime-ci/tasks/ensure-api-healthy/task.yml
      input_mapping:
        cats-integration-config: relint-envs
      params:
        CONFIG_FILE_PATH: environments/test/snitch/integration_config.json
    - in_parallel:
      - task: open-asgs-for-credhub
        file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/snitch/bbl-state
          INSTANCE_GROUP_NAME: credhub
          SYSTEM_DOMAIN: snitch.cf-app.com
          SECURITY_GROUP_NAME: credhub
      - task: open-asgs-for-uaa
        file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/snitch/bbl-state
          INSTANCE_GROUP_NAME: uaa
          SYSTEM_DOMAIN: snitch.cf-app.com
          SECURITY_GROUP_NAME: uaa
      - task: enable-docker-and-tasks
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_STATE_DIR: environments/test/snitch/bbl-state
          SYSTEM_DOMAIN: snitch.cf-app.com
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation

- name: lite-cats
  serial_groups: [ snitch-cats ]
  public: true
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed: [ lite-deploy ]
    - in_parallel:
      - get: cf-acceptance-tests-rc
      - get: cf-deployment-develop
        passed: [ lite-deploy ]
      - get: relint-envs
      - get: cf-deployment-concourse-tasks
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/snitch/integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CONFIG_FILE_PATH: environments/test/snitch/integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/snitch/reporter_config.json
        NODES: 2
        RELINT_VERBOSE_AUTH: "true"

- name: lite-recreate-director
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: lite-pool
      trigger: true
      passed:
      - lite-cats
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: relint-envs
      - get: runtime-ci
      - get: bosh-bootloader
    - task: delete-deployment-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
        IGNORE_ERRORS: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
    - task: combine-bbl-configs
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: bosh-bootloader
        second-input: relint-envs
      params:
        FIRST_DIR: plan-patches/bosh-lite-gcp
        SECOND_DIR: environments/test/snitch/bbl-config
    - task: update-infrastructure
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_STATE_DIR: environments/test/snitch/bbl-state
        BBL_IAAS: gcp
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/snitch/google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_ENV_NAME: snitch-lite
        SKIP_LB_CREATION: true
        BBL_CONFIG_DIR: .
        BBL_RECREATE_DIRECTOR: true
      input_mapping:
        bbl-state: relint-envs
        bbl-config: combined-inputs
      ensure:
        put: relint-envs
        params:
          repository: updated-bbl-state
          rebase: true
    - put: lite-pool
      params: {release: lite-pool}

- name: bbr-acquire-pool
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: cf-deployment-develop
      trigger: true
      passed:
      - unit-test-ops-files
      - lint-cf-deployment-manifest
      - unit-test-golang-tests
      - unit-test-update-releases-coverage
    - put: bbr-pool
      params: {acquire: true}
    timeout: 4h

- name: bbr-release-pool-manual
  public: true
  plan:
  - get: bbr-pool
  ensure:
    try:
      put: bbr-pool
      params: {release: bbr-pool}

- name: bbr-deploy
  public: true
  plan:
  - get: bbr-pool
    trigger: true
    passed: [ bbr-acquire-pool ]
  - in_parallel:
    - get: cf-deployment-develop
      passed: [bbr-acquire-pool]
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: relint-envs
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-develop
      ops-files: cf-deployment-develop
      vars-files: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
      SYSTEM_DOMAIN: baba-yaga.cf-app.com
      OPS_FILES: |
        operations/use-compiled-releases.yml
        operations/backup-and-restore/enable-backup-restore.yml
        operations/enable-nfs-volume-service.yml
        operations/backup-and-restore/enable-restore-nfs-broker.yml
  - task: open-asgs-for-credhub
    file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
      INSTANCE_GROUP_NAME: credhub
      SYSTEM_DOMAIN: baba-yaga.cf-app.com
      SECURITY_GROUP_NAME: credhub
  - task: open-asgs-for-uaa
    file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
      INSTANCE_GROUP_NAME: uaa
      SYSTEM_DOMAIN: baba-yaga.cf-app.com
      SECURITY_GROUP_NAME: uaa
  - task: run-nfs-broker-push-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
      ERRAND_NAME: nfs-broker-push
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state

- name: bbr-run-drats
  public: true
  plan:
  - get: bbr-pool
    trigger: true
    passed: [ bbr-deploy ]
  - in_parallel:
    - get: cf-deployment-develop
      passed: [ bbr-deploy ]
    - get: bbr-github-release
    - get: relint-envs
    - get: cf-deployment-concourse-tasks
    - get: drats-master
    - get: runtime-ci
  - task: generate-drats-config
    file: runtime-ci/tasks/generate-drats-config/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bbr/bbl-state
      SYSTEM_DOMAIN: baba-yaga.cf-app.com
  - task: run-drats
    privileged: true
    file: drats-master/ci/drats-with-integration-config/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: drats-master
      bbr-binary-release: bbr-github-release
      drats-integration-config: drats-config

- name: bbr-release-pool
  public: true
  plan:
  - get: bbr-pool
    passed: [ bbr-run-drats ]
    trigger: true
  - put: bbr-pool
    params: {release: bbr-pool}

- name: stable-acquire-pool
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: cf-deployment-master
      trigger: true
    - put: stable-pool
      params: {acquire: true}

- name: stable-release-pool-manual
  public: true
  plan:
  - get: stable-pool
  ensure:
    try:
      put: stable-pool
      params: {release: stable-pool}

- name: stable-deploy
  serial_groups: [ bellatrix-smokes ]
  public: true
  plan:
  - get: stable-pool
    trigger: true
    passed: [ stable-acquire-pool ]
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-master
    - get: relint-envs
  - task: collect-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-master
      new-ops-files: relint-envs
    params:
      BASE_OPS_FILE_DIR: "operations"
      NEW_OPS_FILES: |
        environments/test/bellatrix/decrease-cc-event-retention.yml
  - task: bosh-deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      cf-deployment: cf-deployment-master
      ops-files: collected-ops-files
      vars-files: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      SYSTEM_DOMAIN: bellatrix.cf-app.com
      OPS_FILES: |
        operations/scale-database-cluster.yml
        operations/windows1803-cell.yml
        operations/decrease-cc-event-retention.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/use-compiled-releases.yml
        operations/experimental/use-compiled-releases-windows.yml
  - task: run-bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
  - task: open-asgs-for-credhub
    file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      INSTANCE_GROUP_NAME: credhub
      SYSTEM_DOMAIN: bellatrix.cf-app.com
      SECURITY_GROUP_NAME: credhub
  - task: open-asgs-for-uaa
    file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      INSTANCE_GROUP_NAME: uaa
      SYSTEM_DOMAIN: bellatrix.cf-app.com
      SECURITY_GROUP_NAME: uaa

- name: stable-smoke-tests
  serial_groups: [bellatrix-smokes]
  public: true
  plan:
  - timeout: 1h
    do:
    - get: stable-pool
      trigger: true
      passed: [stable-deploy]
    - in_parallel:
      - get: relint-envs
        passed: [stable-deploy]
      - get: cf-deployment-master
        passed: [stable-deploy]
      - get: cf-deployment-concourse-tasks
  - task: bosh-run-errand-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/bellatrix/bbl-state
      ERRAND_NAME: smoke-tests
  - put: stable-pool
    params: {release: stable-pool}

- name: stable-semihourly-pool-acquisition
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: half-hourly
      trigger: true
    - put: stable-pool
      params: {claim: bellatrix}

- name: stable-periodic-cats
  serial: true
  public: true
  plan:
  - timeout: 4h
    on_failure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [ stable-semihourly-pool-acquisition ]
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests-rc
      - get: relint-envs
      - get: cf-deployment-master
        passed: [ stable-deploy ]
    - task: enable-docker-and-tasks
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
        SYSTEM_DOMAIN: bellatrix.cf-app.com
        ENABLED_FEATURE_FLAGS: |
          diego_docker
          task_creation
          service_instance_sharing
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
        CATS_INTEGRATION_CONFIG_FILE: environments/test/bellatrix/integration_config.json
      input_mapping:
        bbl-state: relint-envs
        integration-configs: relint-envs
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CONFIG_FILE_PATH: environments/test/bellatrix/integration_config.json
        REPORTER_CONFIG_FILE_PATH: environments/test/bellatrix/reporter_config.json
        FLAKE_ATTEMPTS: 0
        RELINT_VERBOSE_AUTH: "true"

- name: cleanup-stable-periodic-cats
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: stable-pool
      trigger: true
      passed: [ stable-periodic-cats ]
    - in_parallel:
      - get: runtime-ci
      - get: relint-envs
      - get: cf-deployment-master
        passed: [ stable-periodic-cats ]
      - get: cf-acceptance-tests-rc
        passed: [ stable-periodic-cats ]
    - task: cleanup-stable-periodic-cats
      file: runtime-ci/tasks/cleanup-after-cats/task.yml
      input_mapping:
        integration-config: relint-envs
      params:
        CONFIG_FILE_PATH: environments/test/bellatrix/integration_config.json

- name: stable-update-cats-cfd-branch
  public: true
  plan:
  - timeout: 4h
    ensure:
      put: stable-pool
      params: {release: stable-pool}
    do:
    - get: stable-pool
      trigger: true
      passed: [ cleanup-stable-periodic-cats ]
    - in_parallel:
      - get: runtime-ci
      - get: cf-deployment-master
        passed: [ cleanup-stable-periodic-cats ]
      - get: cf-acceptance-tests-rc
        passed: [ cleanup-stable-periodic-cats ]
    - task: update-branch
      file: runtime-ci/tasks/update-cats-branch-with-cf-deployment-version/task.yml
      input_mapping:
        cf-deployment: cf-deployment-master
        cf-acceptance-tests: cf-acceptance-tests-rc
      params:
        CATS_BRANCH: release-candidate
        DEPLOY_KEY: ((cf_acceptance_tests_readwrite_deploy_key.private_key))

- name: bless-manifest
  public: true
  serial: true
  plan:
  - get: cf-deployment-develop
    trigger: true
    passed:
    - fresh-cats
    - fresh-smoke-tests
    - experimental-cats
    - experimental-smoke-tests
    - upgrade-cats
    - upgrade-cats-windows
    - bbr-run-drats
    - lite-cats
  - put: cf-deployment-release-candidate
    params:
      repository: cf-deployment-develop
  - put: deliver-tracker-story
    params:
      repos:
        - cf-deployment-develop

- name: ship-it-patch
  public: true
  plan:
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-version
      params: {bump: patch}
    - get: cf-deployment-master
    - get: cf-deployment-develop
    - get: cf-deployment-release-candidate
      passed: [bless-manifest]
  - task: check-stemcell-versions
    file: runtime-ci/tasks/check-stemcell-versions-for-ship-it/task.yml
  - task: update-cf-deployment-manifest-version
    file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
  - put: cf-deployment-master
    params:
      repository: cf-deployment-rc-with-updated-version
      tag: cf-deployment-version/version
      tag_prefix: v
  - put: cf-deployment-develop
    params:
      repository: cf-deployment-rc-with-updated-version
      merge: true
  - put: cf-deployment-version
    params: {bump: patch}

- name: ship-it-minor
  public: true
  plan:
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-version
      params: {bump: minor}
    - get: cf-deployment-master
    - get: cf-deployment-develop
    - get: cf-deployment-release-candidate
      passed: [bless-manifest]
  - task: check-stemcell-versions
    file: runtime-ci/tasks/check-stemcell-versions-for-ship-it/task.yml
  - task: update-cf-deployment-manifest-version
    file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
  - put: cf-deployment-master
    params:
      repository: cf-deployment-rc-with-updated-version
      tag: cf-deployment-version/version
      tag_prefix: v
  - put: cf-deployment-develop
    params:
      repository: cf-deployment-rc-with-updated-version
      merge: true
  - put: cf-deployment-version
    params: {bump: minor}

- name: ship-it-major
  public: true
  plan:
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-version
      params: {bump: major}
    - get: cf-deployment-master
    - get: cf-deployment-develop
    - get: cf-deployment-release-candidate
      passed: [bless-manifest]
  - task: check-stemcell-versions
    file: runtime-ci/tasks/check-stemcell-versions-for-ship-it/task.yml
  - task: update-cf-deployment-manifest-version
    file: runtime-ci/tasks/record-cfd-version-in-manifest/task.yml
  - put: cf-deployment-master
    params:
      repository: cf-deployment-rc-with-updated-version
      tag: cf-deployment-version/version
      tag_prefix: v
  - put: cf-deployment-develop
    params:
      repository: cf-deployment-rc-with-updated-version
      merge: true
  - put: cf-deployment-version
    params: {bump: major}

- name: release-notes-template
  public: true
  plan:
  - in_parallel:
    - get: runtime-ci
    - get: cf-deployment-master
    - get: cf-deployment-release-candidate
      passed:
      - bless-manifest
      trigger: true
  - task: generate-cf-deployment-release-notes-template
    file: runtime-ci/tasks/cf-deployment-release-notes-template/task.yml
